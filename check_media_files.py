#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–†–û–í–ï–†–ö–ê –ú–ï–î–ò–ê–§–ê–ô–õ–û–í –í WORDPRESS
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –º–µ–¥–∏–∞—Ç–µ–∫–µ
"""

import mysql.connector
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('/var/www/fastuser/data/www/ecopackpro.ru/check_media.log'),
        logging.StreamHandler()
    ]
)
log = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö WordPress
DB_CONFIG = {
    'host': 'localhost',
    'user': 'm1shqamai2_worp6',
    'password': '9nUQkM*Q2cnvy379',
    'database': 'm1shqamai2_worp6',
    'charset': 'utf8mb4'
}

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
KEYWORDS_TO_FIND = [
    "–∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π",
    "–∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø—Ä–æ—Å–ª–æ–π–∫–æ–π", 
    "–∫—Ä–∞—Ñ—Ç–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π",
    "–Ω–∞–∫–ª–µ–π–∫–∞ –ø–ª–æ–º–±–∞ –∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç",
    "–Ω–æ–º–µ—Ä–Ω—ã–µ –ø–ª–æ–º–±—ã –Ω–∞–∫–ª–µ–π–∫–∏",
    "zip lock –ø–∞–∫–µ—Ç—ã —Å –±–µ–ª–æ–π –ø–æ–ª–æ—Å–æ–π",
    "–±–µ–ª—ã–µ –∫—Ä–∞—Ñ—Ç –ø–∞–∫–µ—Ç—ã —Å –ø—É–∑—ã—Ä—á–∞—Ç–æ–π –ø–ª—ë–Ω–∫–æ–π",
    "–∫—Ä–∞—Ñ—Ç –∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π F/3",
    "–∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç–Ω—ã–µ –Ω–∞–∫–ª–µ–π–∫–∏ –¥–ª—è –≤–æ–¥—è–Ω—ã—Ö —Å—á—ë—Ç—á–∏–∫–æ–≤",
    "–ø–ª–æ–º–±–∏—Ä–∞—Ç–æ—Ä –¥–ª—è –µ–≤—Ä–æ–±–æ—á–µ–∫ 2 –¥—é–π–º–∞",
    "–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ–ø–ª–æ–º–±–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—á–µ–∫ ¬æ –¥—é–π–º–∞",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ Ozon",
    "–±–µ–ª—ã–µ –∫—Ä–∞—Ñ—Ç-–ø–∞–∫–µ—Ç—ã —Å –ø—É–∑—ã—Ä—á–∞—Ç–æ–π –ø–ª—ë–Ω–∫–æ–π –æ–ø—Ç–æ–º",
    "–ø–ª–æ—Å–∫–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
    "–ø–∞–∫–µ—Ç—ã –∏–∑ –≤–æ–∑–¥—É—à–Ω–æ-–ø—É–∑—ã—Ä—å–∫–æ–≤–æ–π –ø–ª—ë–Ω–∫–∏ –æ–ø—Ç–æ–º"
]

def get_db_connection():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = mysql.connector.connect(**DB_CONFIG)
        return conn
    except mysql.connector.Error as err:
        log.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {err}")
        return None

def get_all_media_files():
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = get_db_connection()
        if not conn:
            return []
        
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        cursor.execute("""
            SELECT 
                p.ID,
                p.post_title,
                p.post_date,
                pm.meta_value as alt_text,
                p.post_mime_type
            FROM wp_posts p
            LEFT JOIN wp_postmeta pm ON p.ID = pm.post_id AND pm.meta_key = '_wp_attachment_image_alt'
            WHERE p.post_type = 'attachment'
            AND p.post_mime_type LIKE 'image/%'
            ORDER BY p.post_date DESC
        """)
        
        media_files = cursor.fetchall()
        cursor.close()
        conn.close()
        
        log.info(f"–ù–∞–π–¥–µ–Ω–æ {len(media_files)} –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return media_files
        
    except Exception as e:
        log.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤: {e}")
        return []

def find_matching_images(keyword, media_files):
    """–ù–∞–π—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É"""
    matches = []
    keyword_lower = keyword.lower().strip()
    
    for media_file in media_files:
        media_id, title, date, alt_text, mime_type = media_file
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ alt-—Ç–µ–∫—Å—Ç
        title_lower = (title or "").lower().strip()
        alt_lower = (alt_text or "").lower().strip()
        
        # –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        if title_lower == keyword_lower or alt_lower == keyword_lower:
            matches.append({
                'id': media_id,
                'title': title,
                'alt': alt_text,
                'date': date,
                'match_type': 'exact'
            })
            continue
        
        # –ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ (—Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ)
        if keyword_lower in title_lower or keyword_lower in alt_lower:
            matches.append({
                'id': media_id,
                'title': title,
                'alt': alt_text,
                'date': date,
                'match_type': 'partial'
            })
    
    return matches

def check_keywords_in_media():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞—Ö"""
    log.info("üîç –ü–†–û–í–ï–†–ö–ê –ú–ï–î–ò–ê–§–ê–ô–õ–û–í")
    log.info("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã
    media_files = get_all_media_files()
    
    if not media_files:
        log.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
    found_keywords = []
    missing_keywords = []
    
    for keyword in KEYWORDS_TO_FIND:
        log.info(f"\nüîç –ü–æ–∏—Å–∫: '{keyword}'")
        
        matches = find_matching_images(keyword, media_files)
        
        if matches:
            log.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(matches)} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π:")
            
            for match in matches:
                log.info(f"   ID: {match['id']}, –¢–∏–ø: {match['match_type']}")
                log.info(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: '{match['title']}'")
                log.info(f"   Alt: '{match['alt']}'")
                log.info(f"   –î–∞—Ç–∞: {match['date']}")
            
            found_keywords.append({
                'keyword': keyword,
                'matches': matches
            })
        else:
            log.warning(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è: '{keyword}'")
            missing_keywords.append(keyword)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    log.info("\n" + "=" * 60)
    log.info("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    log.info("=" * 60)
    log.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(found_keywords)}")
    log.info(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(missing_keywords)}")
    
    if missing_keywords:
        log.info("\nüö® –ö–õ–Æ–ß–ï–í–´–ï –°–õ–û–í–ê –ë–ï–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô:")
        for keyword in missing_keywords:
            log.info(f"   - {keyword}")
    
    return {
        'found': found_keywords,
        'missing': missing_keywords,
        'total_media': len(media_files)
    }

def show_recent_uploads():
    """–ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–¥–∞–≤–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"""
    try:
        conn = get_db_connection()
        if not conn:
            return
        
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Å–µ–≥–æ–¥–Ω—è
        cursor.execute("""
            SELECT 
                p.ID,
                p.post_title,
                p.post_date,
                pm.meta_value as alt_text
            FROM wp_posts p
            LEFT JOIN wp_postmeta pm ON p.ID = pm.post_id AND pm.meta_key = '_wp_attachment_image_alt'
            WHERE p.post_type = 'attachment'
            AND p.post_mime_type LIKE 'image/%'
            AND DATE(p.post_date) = CURDATE()
            ORDER BY p.post_date DESC
        """)
        
        recent_files = cursor.fetchall()
        cursor.close()
        conn.close()
        
        log.info(f"\nüìÖ –§–ê–ô–õ–´, –ó–ê–ì–†–£–ñ–ï–ù–ù–´–ï –°–ï–ì–û–î–ù–Ø: {len(recent_files)}")
        log.info("-" * 50)
        
        for file_data in recent_files:
            media_id, title, date, alt_text = file_data
            log.info(f"ID: {media_id} | '{title}' | Alt: '{alt_text}' | {date}")
        
    except Exception as e:
        log.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–¥–∞–≤–Ω–∏—Ö —Ñ–∞–π–ª–æ–≤: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    log.info("üöÄ –ü–†–û–í–ï–†–ö–ê –ú–ï–î–ò–ê–§–ê–ô–õ–û–í –í WORDPRESS")
    log.info(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ–¥–∞–≤–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    show_recent_uploads()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    result = check_keywords_in_media()
    
    if result and result['missing']:
        log.info("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
        log.info("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏ –Ω–∞ MacBook")
        log.info("–ò–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –º–µ–¥–∏–∞—Ç–µ–∫–µ")

if __name__ == "__main__":
    main()

