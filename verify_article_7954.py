#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import base64
import json
from datetime import datetime
from bs4 import BeautifulSoup

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WordPress API
WORDPRESS_URL = "https://ecopackpro.ru"
APPLICATION_PASSWORD = "7EKI VWpH 96dg VI3H ovlI hI4E"
USERNAME = "rtep1976@me.com"

def verify_article_7954():
    """–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—å–∏ 7954"""
    print("üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–¨–ò 7954")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    credentials = f"{USERNAME}:{APPLICATION_PASSWORD}"
    encoded_credentials = base64.b64encode(credentials.encode()).decode()
    
    headers = {
        'Authorization': f'Basic {encoded_credentials}',
        'Content-Type': 'application/json',
        'User-Agent': 'WordPress-API-Client/1.0'
    }
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞
        response = requests.get(
            f"{WORDPRESS_URL}/wp-json/wp/v2/posts/7954",
            headers=headers,
            params={'_embed': 'wp:featuredmedia'},
            timeout=30
        )
        
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞: {response.status_code}")
            return False
        
        post_data = response.json()
        post_title = post_data.get('title', {}).get('rendered', '')
        post_content = post_data.get('content', {}).get('rendered', '')
        
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {post_title}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–ª–∞–≤–Ω–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
        featured_media = post_data.get('_embedded', {}).get('wp:featuredmedia', [])
        
        if featured_media:
            media_info = featured_media[0]
            featured_img = {
                'id': media_info.get('id'),
                'url': media_info.get('source_url'),
                'alt': media_info.get('alt_text', ''),
                'title': media_info.get('title', {}).get('rendered', ''),
            }
            
            print(f"üñºÔ∏è  –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {featured_img['url'].split('/')[-1]}")
            print(f"üìù Alt —Ç–µ–∫—Å—Ç: {featured_img['alt']}")
        else:
            print("‚ùå –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        soup = BeautifulSoup(post_content, 'html.parser')
        images = soup.find_all('img')
        
        print(f"\nüìä –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:")
        print(f"  - –í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ: {len(images)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        placeholder_count = post_content.count('Tvist-PRO')
        print(f"  - Placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {placeholder_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        correct_img_count = post_content.count(featured_img['url'].split('/')[-1])
        print(f"  - –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {correct_img_count}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        print(f"\nüîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:")
        for i, img in enumerate(images, 1):
            src = img.get('src', '')
            alt = img.get('alt', '')
            img_filename = src.split('/')[-1] if src else 'unknown'
            
            print(f"  {i}. {img_filename}")
            print(f"     Alt: {alt}")
            
            if 'Tvist-PRO' in src:
                print(f"     ‚ùå Placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            elif featured_img['url'].split('/')[-1] in src:
                print(f"     ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
            else:
                print(f"     ‚ö†Ô∏è  –î—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        
        # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"\nüìã –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
        if placeholder_count == 0 and correct_img_count > 0:
            print("‚úÖ –°–¢–ê–¢–¨–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ê –£–°–ü–ï–®–ù–û!")
            print("‚úÖ –í—Å–µ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ")
            print(f"‚úÖ –í–∏–∑—É–∞–ª—å–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è: {featured_img['url'].split('/')[-1]}")
            print(f"üîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {WORDPRESS_URL}/?p=7954&preview=true")
            return True
        else:
            print("‚ùå –°–¢–ê–¢–¨–Ø –ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–ê –ü–û–õ–ù–û–°–¢–¨–Æ")
            if placeholder_count > 0:
                print(f"‚ùå –û—Å—Ç–∞–ª–∏—Å—å placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {placeholder_count}")
            if correct_img_count == 0:
                print("‚ùå –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

if __name__ == "__main__":
    verify_article_7954()
