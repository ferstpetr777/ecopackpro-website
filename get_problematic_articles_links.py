#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
from datetime import datetime

def get_problematic_articles_links():
    """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –Ω–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏–∑ –æ—Ç—á–µ—Ç–∞ –∞—É–¥–∏—Ç–∞"""
    
    print("üîç –ü–û–ò–°–ö –û–¢–ß–ï–¢–ê –ê–£–î–ò–¢–ê –ò –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –°–°–´–õ–û–ö –ù–ê –ü–†–û–ë–õ–ï–ú–ù–´–ï –°–¢–ê–¢–¨–ò")
    print("=" * 80)
    
    # –ò—â–µ–º —Ñ–∞–π–ª –æ—Ç—á–µ—Ç–∞ –∞—É–¥–∏—Ç–∞
    report_files = [f for f in os.listdir('.') if f.startswith('audit_featured_images_report_') and f.endswith('.json')]
    
    if not report_files:
        print("‚ùå –§–∞–π–ª –æ—Ç—á–µ—Ç–∞ –∞—É–¥–∏—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –ë–µ—Ä–µ–º —Å–∞–º—ã–π —Å–≤–µ–∂–∏–π —Ñ–∞–π–ª
    latest_report = sorted(report_files)[-1]
    print(f"üìÅ –ù–∞–π–¥–µ–Ω –æ—Ç—á–µ—Ç: {latest_report}")
    
    try:
        with open(latest_report, 'r', encoding='utf-8') as f:
            report_data = json.load(f)
        
        detailed_results = report_data.get('detailed_results', [])
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—Ç–∞—Ç—å–∏
        problematic_articles = [article for article in detailed_results if not article['is_match']]
        
        print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"  - –í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π –≤ –æ—Ç—á–µ—Ç–µ: {len(detailed_results)}")
        print(f"  - –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π: {len(problematic_articles)}")
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º –ø—Ä–æ–±–ª–µ–º
        placeholder_issues = []
        wrong_images = []
        missing_images = []
        other_issues = []
        
        for article in problematic_articles:
            reason = article['reason'].lower()
            if 'placeholder' in reason:
                placeholder_issues.append(article)
            elif '—Ä–∞–∑–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è' in reason:
                wrong_images.append(article)
            elif '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ' in reason:
                missing_images.append(article)
            else:
                other_issues.append(article)
        
        print(f"\nüìã –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –¢–ò–ü–ê–ú –ü–†–û–ë–õ–ï–ú:")
        print(f"  - Placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {len(placeholder_issues)}")
        print(f"  - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {len(wrong_images)}")
        print(f"  - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {len(missing_images)}")
        print(f"  - –î—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã: {len(other_issues)}")
        
        # –í—ã–≤–æ–¥–∏–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—Ç–∞—Ç—å–∏
        print(f"\nüîó –°–°–´–õ–ö–ò –ù–ê –ü–†–û–ë–õ–ï–ú–ù–´–ï –°–¢–ê–¢–¨–ò:")
        print("=" * 80)
        
        # 1. Placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1)
        if placeholder_issues:
            print(f"\nüö® 1. –°–¢–ê–¢–¨–ò –° PLACEHOLDER –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò ({len(placeholder_issues)} —Å—Ç–∞—Ç–µ–π):")
            print("-" * 60)
            for i, article in enumerate(placeholder_issues, 1):
                post_id = article['post_id']
                title = article['title']
                url = f"https://ecopackpro.ru/?p={post_id}&preview=true"
                print(f"{i:2d}. ID {post_id}: {title}")
                print(f"    üîó {url}")
                print()
        
        # 2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2)
        if wrong_images:
            print(f"\n‚ö†Ô∏è  2. –°–¢–ê–¢–¨–ò –° –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò ({len(wrong_images)} —Å—Ç–∞—Ç–µ–π):")
            print("-" * 60)
            for i, article in enumerate(wrong_images, 1):
                post_id = article['post_id']
                title = article['title']
                url = f"https://ecopackpro.ru/?p={post_id}&preview=true"
                print(f"{i:2d}. ID {post_id}: {title}")
                print(f"    üîó {url}")
                print()
        
        # 3. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3)
        if missing_images:
            print(f"\nüì≠ 3. –°–¢–ê–¢–¨–ò –° –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–ú–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò ({len(missing_images)} —Å—Ç–∞—Ç–µ–π):")
            print("-" * 60)
            for i, article in enumerate(missing_images, 1):
                post_id = article['post_id']
                title = article['title']
                url = f"https://ecopackpro.ru/?p={post_id}&preview=true"
                print(f"{i:2d}. ID {post_id}: {title}")
                print(f"    üîó {url}")
                print()
        
        # 4. –î—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
        if other_issues:
            print(f"\n‚ùì 4. –°–¢–ê–¢–¨–ò –° –î–†–£–ì–ò–ú–ò –ü–†–û–ë–õ–ï–ú–ê–ú–ò ({len(other_issues)} —Å—Ç–∞—Ç–µ–π):")
            print("-" * 60)
            for i, article in enumerate(other_issues, 1):
                post_id = article['post_id']
                title = article['title']
                url = f"https://ecopackpro.ru/?p={post_id}&preview=true"
                reason = article['reason']
                print(f"{i:2d}. ID {post_id}: {title}")
                print(f"    üîó {url}")
                print(f"    üìù –ü—Ä–æ–±–ª–µ–º–∞: {reason}")
                print()
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º —Å—Å—ã–ª–æ–∫
        links_filename = f"problematic_articles_links_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
        
        with open(links_filename, 'w', encoding='utf-8') as f:
            f.write("–°–°–´–õ–ö–ò –ù–ê –ü–†–û–ë–õ–ï–ú–ù–´–ï –°–¢–ê–¢–¨–ò\n")
            f.write("=" * 50 + "\n\n")
            
            f.write(f"–í—Å–µ–≥–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π: {len(problematic_articles)}\n")
            f.write(f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n")
            
            # Placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            if placeholder_issues:
                f.write(f"–°–¢–ê–¢–¨–ò –° PLACEHOLDER –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò ({len(placeholder_issues)} —Å—Ç–∞—Ç–µ–π):\n")
                f.write("-" * 50 + "\n")
                for article in placeholder_issues:
                    post_id = article['post_id']
                    title = article['title']
                    url = f"https://ecopackpro.ru/?p={post_id}&preview=true"
                    f.write(f"ID {post_id}: {title}\n")
                    f.write(f"{url}\n\n")
            
            # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            if wrong_images:
                f.write(f"–°–¢–ê–¢–¨–ò –° –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò ({len(wrong_images)} —Å—Ç–∞—Ç–µ–π):\n")
                f.write("-" * 50 + "\n")
                for article in wrong_images:
                    post_id = article['post_id']
                    title = article['title']
                    url = f"https://ecopackpro.ru/?p={post_id}&preview=true"
                    f.write(f"ID {post_id}: {title}\n")
                    f.write(f"{url}\n\n")
            
            # –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            if missing_images:
                f.write(f"–°–¢–ê–¢–¨–ò –° –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–ú–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò ({len(missing_images)} —Å—Ç–∞—Ç–µ–π):\n")
                f.write("-" * 50 + "\n")
                for article in missing_images:
                    post_id = article['post_id']
                    title = article['title']
                    url = f"https://ecopackpro.ru/?p={post_id}&preview=true"
                    f.write(f"ID {post_id}: {title}\n")
                    f.write(f"{url}\n\n")
        
        print(f"\nüìÅ –°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {links_filename}")
        
        # –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞
        print(f"\nüìã –ö–†–ê–¢–ö–ê–Ø –°–í–û–î–ö–ê:")
        print(f"üéØ –í—Å–µ–≥–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π: {len(problematic_articles)}")
        print(f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö (placeholder): {len(placeholder_issues)}")
        print(f"‚ö†Ô∏è  –¢—Ä–µ–±—É—é—â–∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {len(wrong_images)}")
        print(f"üì≠ –° —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏: {len(missing_images)}")
        
        return problematic_articles
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {e}")
        return []

if __name__ == "__main__":
    get_problematic_articles_links()
