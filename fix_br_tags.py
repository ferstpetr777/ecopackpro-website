#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–∏—à–Ω–∏—Ö <br> —Ç–µ–≥–æ–≤ –≤ —Å—Ç–∞—Ç—å—è—Ö
"""

import mysql.connector
import re

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
DB_CONFIG = {
    'host': 'localhost',
    'user': 'm1shqamai2_worp6',
    'password': '9nUQkM*Q2cnvy379',
    'database': 'm1shqamai2_worp6',
    'charset': 'utf8mb4'
}

def clean_br_tags(html):
    """–û—á–∏—â–∞–µ—Ç –ª–∏—à–Ω–∏–µ <br> —Ç–µ–≥–∏"""
    
    # 1. –£–±–∏—Ä–∞–µ–º <br> –ø–µ—Ä–µ–¥ —Ç–µ–≥–∞–º–∏
    html = re.sub(r'<br>\s*(<[^>]+>)', r'\1', html)
    
    # 2. –£–±–∏—Ä–∞–µ–º <br> –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Ç–µ–≥–æ–≤
    html = re.sub(r'(</[^>]+>)\s*<br>', r'\1', html)
    
    # 3. –£–±–∏—Ä–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ <br><br><br> -> <br><br>
    html = re.sub(r'(<br>\s*){3,}', '<br><br>', html)
    
    # 4. –£–±–∏—Ä–∞–µ–º <br> –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤
    html = re.sub(r'<p>\s*<br>\s*', '<p>', html)
    html = re.sub(r'\s*<br>\s*</p>', '</p>', html)
    
    # 5. –£–±–∏—Ä–∞–µ–º <br> –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    html = re.sub(r'<h[1-6]>\s*<br>\s*', r'<h1>', html)
    html = re.sub(r'\s*<br>\s*</h[1-6]>', r'</h1>', html)
    
    # 6. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã –≤ —Å–ø–∏—Å–∫–∞—Ö
    html = re.sub(r'<br>\s*[-‚Ä¢]\s*', '<br>‚Ä¢ ', html)
    
    # 7. –£–±–∏—Ä–∞–µ–º <br> –ø–µ—Ä–µ–¥ —Å–ø–∏—Å–∫–∞–º–∏
    html = re.sub(r'<br>\s*<ul>', '<ul>', html)
    html = re.sub(r'<br>\s*<ol>', '<ol>', html)
    
    return html

def main():
    print("=" * 70)
    print("–û–ß–ò–°–¢–ö–ê –õ–ò–®–ù–ò–• <BR> –¢–ï–ì–û–í –í –°–¢–ê–¢–¨–Ø–•")
    print("=" * 70)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        print("\n1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = mysql.connector.connect(**DB_CONFIG)
        cursor = conn.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ë–î")
        
        # –ù–∞–π—Ç–∏ –≤—Å–µ —Å—Ç–∞—Ç—å–∏
        print("\n2. –ü–æ–∏—Å–∫ –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π...")
        cursor.execute("""
            SELECT ID, post_title 
            FROM wp_posts 
            WHERE post_type = 'post' 
            AND post_status = 'publish'
            ORDER BY ID
        """)
        
        articles = cursor.fetchall()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
        
        # –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∂–¥—É—é —Å—Ç–∞—Ç—å—é
        print("\n3. –û—á–∏—Å—Ç–∫–∞ <br> —Ç–µ–≥–æ–≤...")
        success_count = 0
        
        for article_id, article_title in articles:
            try:
                # –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                cursor.execute("SELECT post_content FROM wp_posts WHERE ID = %s", (article_id,))
                current_content = cursor.fetchone()[0]
                
                # –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å <br> —Ç–µ–≥–∏ –¥–æ –æ—á–∏—Å—Ç–∫–∏
                br_before = current_content.count('<br>')
                
                # –û—á–∏—Å—Ç–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                cleaned_content = clean_br_tags(current_content)
                
                # –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å <br> —Ç–µ–≥–∏ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
                br_after = cleaned_content.count('<br>')
                
                # –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                if current_content != cleaned_content:
                    cursor.execute("""
                        UPDATE wp_posts 
                        SET post_content = %s, 
                            post_modified = NOW(), 
                            post_modified_gmt = NOW() 
                        WHERE ID = %s
                    """, (cleaned_content, article_id))
                    
                    print(f"‚úÖ –°—Ç–∞—Ç—å—è {article_id}: —É–±—Ä–∞–Ω–æ {br_before - br_after} –ª–∏—à–Ω–∏—Ö <br> —Ç–µ–≥–æ–≤")
                    success_count += 1
                else:
                    print(f"‚è≠Ô∏è –°—Ç–∞—Ç—å—è {article_id}: –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
                
                conn.commit()
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∞—Ç—å–∏ {article_id}: {e}")
                conn.rollback()
        
        # –ó–∞–∫—Ä—ã—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        cursor.close()
        conn.close()
        
        print("\n" + "=" * 70)
        print(f"‚úÖ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
        print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {success_count}")
        print(f"‚è≠Ô∏è –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {len(articles) - success_count}")
        print("=" * 70)
        
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()
