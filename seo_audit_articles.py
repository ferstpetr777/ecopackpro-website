#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ê–£–î–ò–¢ SEO –°–¢–ê–¢–ï–ô - –ü–†–û–í–ï–†–ö–ê –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Å—Ç–∞—Ç—å–∏, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º
"""

import mysql.connector
import sqlite3
import logging
import os
from datetime import datetime
from bs4 import BeautifulSoup
import requests
from urllib.parse import quote

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('/var/www/fastuser/data/www/ecopackpro.ru/seo_audit.log'),
        logging.StreamHandler()
    ]
)
log = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö WordPress
DB_CONFIG = {
    'host': 'localhost',
    'user': 'm1shqamai2_worp6',
    'password': '9nUQkM*Q2cnvy379',
    'database': 'm1shqamai2_worp6',
    'charset': 'utf8mb4'
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_DB_PATH = "/root/seo_project/SEO_ecopackpro/articles.db"

# –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
EXPECTED_KEYWORDS = [
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã",
    "–ø–æ—á—Ç–æ–≤—ã–µ –∫–æ—Ä–æ–±–∫–∏", 
    "–∑–∏–ø –ø–∞–∫–µ—Ç—ã",
    "zip lock –ø–∞–∫–µ—Ç—ã —Å –±–µ–≥—É–Ω–∫–æ–º",
    "–∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π",
    "–∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø—Ä–æ—Å–ª–æ–π–∫–æ–π",
    "–∫—Ä–∞—Ñ—Ç–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã –Ω–æ–º–µ—Ä–Ω—ã–µ",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —á–µ—Ä–Ω–æ-–±–µ–ª—ã–µ",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —Å –∫–∞—Ä–º–∞–Ω–æ–º",
    "zip lock –ø–∞–∫–µ—Ç—ã –º–∞—Ç–æ–≤—ã–µ",
    "zip lock –ø–∞–∫–µ—Ç—ã –æ–ø—Ç–æ–º",
    "–∫—Ä–∞—Ñ—Ç–æ–≤—ã–µ –∫–æ–Ω–≤–µ—Ä—Ç—ã",
    "–ø—É–∑—ã—Ä—á–∞—Ç—ã–µ –ø–∞–∫–µ—Ç—ã –í–ü–ü",
    "–∫–æ—Ä–æ–±–∫–∏ –¥–ª—è –ø–æ—á—Ç—ã",
    "–∫–æ—Ä–æ–±–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏",
    "—Å–∞–º–æ–∫–ª–µ—è—â–∏–µ—Å—è –∫–∞—Ä–º–∞–Ω—ã",
    "–∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç–Ω–∞—è –ø–ª–æ–º–±–∞",
    "–Ω–∞–∫–ª–µ–π–∫–∞ –ø–ª–æ–º–±–∞ –∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç",
    "–ø–ª–æ–º–±–∏—Ä–∞—Ç–æ—Ä –¥–ª—è –±–æ—á–µ–∫",
    "–Ω–æ–º–µ—Ä–Ω—ã–µ –ø–ª–æ–º–±—ã –Ω–∞–∫–ª–µ–π–∫–∏",
    "zip lock –ø–∞–∫–µ—Ç—ã —Å –±–µ–ª–æ–π –ø–æ–ª–æ—Å–æ–π",
    "–±–µ–ª—ã–µ –∫—Ä–∞—Ñ—Ç –ø–∞–∫–µ—Ç—ã —Å –ø—É–∑—ã—Ä—á–∞—Ç–æ–π –ø–ª—ë–Ω–∫–æ–π",
    "–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ zip lock –ø–∞–∫–µ—Ç—ã",
    "–∫—É–ø–∏—Ç—å –∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —Å –Ω–æ–º–µ—Ä–Ω—ã–º —à—Ç—Ä–∏—Ö-–∫–æ–¥–æ–º",
    "–∑–∞–∫–∞–∑–∞—Ç—å –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã –æ–ø—Ç–æ–º",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —á–µ—Ä–Ω–æ-–±–µ–ª—ã–µ —Å –∫–∞—Ä–º–∞–Ω–æ–º —Ü–µ–Ω–∞",
    "–º–∞—Ç–æ–≤—ã–µ zip lock –ø–∞–∫–µ—Ç—ã —Å –±–µ–≥—É–Ω–∫–æ–º 10√ó15",
    "–∫—É–ø–∏—Ç—å –æ–ø—Ç–æ–º zip lock –ø–∞–∫–µ—Ç—ã –º–∞—Ç–æ–≤—ã–µ 30 –º–∫–º",
    "–∫—Ä–∞—Ñ—Ç –∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π F/3",
    "–ø–æ—á—Ç–æ–≤—ã–µ –∫–æ—Ä–æ–±–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ S 260√ó170√ó80",
    "–ø–æ—á—Ç–æ–≤—ã–µ –∫–æ—Ä–æ–±–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ XL 530√ó360√ó220",
    "–∫—É–ø–∏—Ç—å —Å–∞–º–æ–∫–ª–µ—è—â–∏–µ—Å—è –∫–∞—Ä–º–∞–Ω—ã SD –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
    "–∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç–Ω—ã–µ –Ω–∞–∫–ª–µ–π–∫–∏ –¥–ª—è –≤–æ–¥—è–Ω—ã—Ö —Å—á—ë—Ç—á–∏–∫–æ–≤",
    "–∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç–Ω–∞—è –ø–ª–æ–º–±–∞ —Ü–µ–Ω–∞ –∑–∞ 100 —à—Ç—É–∫",
    "–ø–ª–æ–º–±–∏—Ä–∞—Ç–æ—Ä –¥–ª—è –µ–≤—Ä–æ–±–æ—á–µ–∫ 2 –¥—é–π–º–∞",
    "–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ–ø–ª–æ–º–±–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—á–µ–∫ ¬æ –¥—é–π–º–∞",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —á–µ—Ä–Ω–æ-–±–µ–ª—ã–µ –±–µ–∑ –ª–æ–≥–æ—Ç–∏–ø–∞ –ê4",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –¥–ª—è –æ–¥–µ–∂–¥—ã",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ Ozon",
    "–ø–æ—á—Ç–æ–≤—ã–µ –∫–æ—Ä–æ–±–∫–∏ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –Ω–∞ –∑–∞–∫–∞–∑",
    "–∑–∏–ø –ø–∞–∫–µ—Ç—ã —Å –±–µ–≥—É–Ω–∫–æ–º –∫—É–ø–∏—Ç—å –ú–æ—Å–∫–≤–∞",
    "–º–∞—Ç–æ–≤—ã–µ zip lock –ø–∞–∫–µ—Ç—ã –¥–ª—è —á–∞—è",
    "zip lock –ø–∞–∫–µ—Ç—ã —Å –ø–æ–¥–≤–µ—Å–æ–º",
    "–±–µ–ª—ã–µ –∫—Ä–∞—Ñ—Ç-–ø–∞–∫–µ—Ç—ã —Å –ø—É–∑—ã—Ä—á–∞—Ç–æ–π –ø–ª—ë–Ω–∫–æ–π –æ–ø—Ç–æ–º",
    "–ø–ª–æ—Å–∫–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
    "–ø–∞–∫–µ—Ç—ã –∏–∑ –≤–æ–∑–¥—É—à–Ω–æ-–ø—É–∑—ã—Ä—å–∫–æ–≤–æ–π –ø–ª—ë–Ω–∫–∏ –æ–ø—Ç–æ–º",
    "–∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç–Ω—ã–µ –ø–ª–æ–º–±—ã –¥–ª—è –≥–∞–∑–æ–≤—ã—Ö —Å—á—ë—Ç—á–∏–∫–æ–≤",
    "—Å–∞–º–æ–∫–ª–µ—è—â–∏–µ—Å—è –∫–∞—Ä–º–∞–Ω—ã –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö"
]

def get_db_connection():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö WordPress"""
    try:
        conn = mysql.connector.connect(**DB_CONFIG)
        return conn
    except mysql.connector.Error as err:
        log.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î WordPress: {err}")
        return None

def get_articles_from_project_db():
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—å–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞"""
    try:
        conn = sqlite3.connect(PROJECT_DB_PATH)
        cursor = conn.cursor()
        
        cursor.execute("""
            SELECT keyword, meta_description 
            FROM articles 
            WHERE keyword IS NOT NULL AND meta_description IS NOT NULL
            ORDER BY id
        """)
        
        articles = cursor.fetchall()
        cursor.close()
        conn.close()
        
        log.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(articles)} —Å—Ç–∞—Ç–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞")
        return articles
        
    except Exception as e:
        log.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –ë–î –ø—Ä–æ–µ–∫—Ç–∞: {e}")
        return []

def get_wordpress_posts_with_images():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç—ã –∏–∑ WordPress —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö"""
    try:
        conn = get_db_connection()
        if not conn:
            return []
        
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã —Å –∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        cursor.execute("""
            SELECT 
                p.ID, 
                p.post_title, 
                p.post_name, 
                p.post_content,
                pm.meta_value as featured_image_id
            FROM wp_posts p
            LEFT JOIN wp_postmeta pm ON p.ID = pm.post_id AND pm.meta_key = '_thumbnail_id'
            WHERE p.post_type = 'post' 
            AND p.post_status = 'draft'
            AND p.ID BETWEEN 7907 AND 7956
            ORDER BY p.ID ASC
        """)
        
        posts = cursor.fetchall()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
        posts_with_images = []
        for post in posts:
            post_id, title, slug, content, featured_image_id = post
            
            image_title = ""
            image_alt = ""
            
            if featured_image_id:
                cursor.execute("""
                    SELECT post_title, post_excerpt
                    FROM wp_posts 
                    WHERE ID = %s AND post_type = 'attachment'
                """, (featured_image_id,))
                
                image_data = cursor.fetchone()
                if image_data:
                    image_title = image_data[0] or ""
                    image_alt = image_data[1] or ""
                
                # –ü–æ–ª—É—á–∞–µ–º alt —Ç–µ–∫—Å—Ç –∏–∑ –º–µ—Ç–∞-–ø–æ–ª–µ–π
                cursor.execute("""
                    SELECT meta_value
                    FROM wp_postmeta 
                    WHERE post_id = %s AND meta_key = '_wp_attachment_image_alt'
                """, (featured_image_id,))
                
                alt_data = cursor.fetchone()
                if alt_data:
                    image_alt = alt_data[0] or ""
            
            posts_with_images.append({
                'id': post_id,
                'title': title,
                'slug': slug,
                'content': content,
                'featured_image_id': featured_image_id,
                'image_title': image_title,
                'image_alt': image_alt
            })
        
        cursor.close()
        conn.close()
        
        log.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(posts_with_images)} –ø–æ—Å—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏–∑ WordPress")
        return posts_with_images
        
    except Exception as e:
        log.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–æ–≤ –∏–∑ WordPress: {e}")
        return []

def normalize_text(text):
    """–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"""
    if not text:
        return ""
    
    # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    text = text.lower().strip()
    
    # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    text = ' '.join(text.split())
    
    return text

def check_keyword_match(keyword1, keyword2):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤"""
    if not keyword1 or not keyword2:
        return False
    
    norm1 = normalize_text(keyword1)
    norm2 = normalize_text(keyword2)
    
    return norm1 == norm2

def audit_article(article_data, expected_keyword, index):
    """–ê—É–¥–∏—Ç –æ–¥–Ω–æ–π —Å—Ç–∞—Ç—å–∏"""
    post_id = article_data['id']
    title = article_data['title']
    image_title = article_data['image_title']
    image_alt = article_data['image_alt']
    
    log.info(f"üîç [{index+1}/50] –ê—É–¥–∏—Ç —Å—Ç–∞—Ç—å–∏ ID {post_id}")
    log.info(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
    log.info(f"   –û–∂–∏–¥–∞–µ–º–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {expected_keyword}")
    log.info(f"   –ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {image_title}")
    log.info(f"   Alt —Ç–µ–∫—Å—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {image_alt}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    title_match = check_keyword_match(title, expected_keyword)
    image_title_match = check_keyword_match(image_title, expected_keyword)
    image_alt_match = check_keyword_match(image_alt, expected_keyword)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
    if title_match and (image_title_match or image_alt_match):
        status = "‚úÖ –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢"
        log.info(f"   {status}")
        return {
            'post_id': post_id,
            'title': title,
            'expected_keyword': expected_keyword,
            'image_title': image_title,
            'image_alt': image_alt,
            'title_match': title_match,
            'image_title_match': image_title_match,
            'image_alt_match': image_alt_match,
            'status': 'OK',
            'issues': []
        }
    else:
        issues = []
        if not title_match:
            issues.append("–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É")
        if not image_title_match and not image_alt_match:
            issues.append("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É")
        
        status = "‚ùå –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢"
        log.warning(f"   {status}")
        for issue in issues:
            log.warning(f"   ‚ö†Ô∏è {issue}")
        
        return {
            'post_id': post_id,
            'title': title,
            'expected_keyword': expected_keyword,
            'image_title': image_title,
            'image_alt': image_alt,
            'title_match': title_match,
            'image_title_match': image_title_match,
            'image_alt_match': image_alt_match,
            'status': 'ERROR',
            'issues': issues
        }

def generate_audit_report(audit_results):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ –∞—É–¥–∏—Ç—É"""
    total_articles = len(audit_results)
    ok_articles = len([r for r in audit_results if r['status'] == 'OK'])
    error_articles = len([r for r in audit_results if r['status'] == 'ERROR'])
    
    log.info("=" * 80)
    log.info("üìä –û–¢–ß–ï–¢ –ü–û –ê–£–î–ò–¢–£ SEO –°–¢–ê–¢–ï–ô")
    log.info("=" * 80)
    log.info(f"üìà –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π: {total_articles}")
    log.info(f"‚úÖ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–µ—Ä–∏—è–º: {ok_articles}")
    log.info(f"‚ùå –¢—Ä–µ–±—É—é—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {error_articles}")
    log.info(f"üìä –ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è: {(ok_articles/total_articles*100):.1f}%")
    
    if error_articles > 0:
        log.info("\nüö® –°–¢–ê–¢–¨–ò –¢–†–ï–ë–£–Æ–©–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
        log.info("-" * 50)
        
        for i, result in enumerate(audit_results, 1):
            if result['status'] == 'ERROR':
                log.warning(f"{i}. ID {result['post_id']}: {result['title']}")
                log.warning(f"   –û–∂–∏–¥–∞–ª–æ—Å—å: {result['expected_keyword']}")
                log.warning(f"   –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {result['image_title']} / {result['image_alt']}")
                for issue in result['issues']:
                    log.warning(f"   ‚ùå {issue}")
                log.warning("")
    
    return {
        'total': total_articles,
        'ok': ok_articles,
        'errors': error_articles,
        'percentage': (ok_articles/total_articles*100) if total_articles > 0 else 0,
        'error_details': [r for r in audit_results if r['status'] == 'ERROR']
    }

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞—É–¥–∏—Ç–∞"""
    log.info("üîç –ó–ê–ü–£–°–ö –ê–£–î–ò–¢–ê SEO –°–¢–ê–¢–ï–ô")
    log.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è: –∑–∞–≥–æ–ª–æ–≤–æ–∫ ‚Üî –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Üî –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ")
    log.info(f"–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    log.info("=" * 80)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        articles = get_articles_from_project_db()
        posts = get_wordpress_posts_with_images()
        
        if not articles or not posts:
            log.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞—É–¥–∏—Ç–∞")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        if len(articles) != len(EXPECTED_KEYWORDS):
            log.warning(f"–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞: —Å—Ç–∞—Ç—å–∏={len(articles)}, –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞={len(EXPECTED_KEYWORDS)}")
        
        if len(posts) != len(EXPECTED_KEYWORDS):
            log.warning(f"–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞: –ø–æ—Å—Ç—ã={len(posts)}, –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞={len(EXPECTED_KEYWORDS)}")
        
        # –ü—Ä–æ–≤–æ–¥–∏–º –∞—É–¥–∏—Ç –∫–∞–∂–¥–æ–π —Å—Ç–∞—Ç—å–∏
        audit_results = []
        
        for i, expected_keyword in enumerate(EXPECTED_KEYWORDS):
            if i < len(posts):
                article_data = posts[i]
                result = audit_article(article_data, expected_keyword, i)
                audit_results.append(result)
            else:
                log.warning(f"–°—Ç–∞—Ç—å—è {i+1} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ WordPress")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report = generate_audit_report(audit_results)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –≤ —Ñ–∞–π–ª
        report_file = f"/var/www/fastuser/data/www/ecopackpro.ru/seo_audit_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
        
        with open(report_file, 'w', encoding='utf-8') as f:
            f.write("–û–¢–ß–ï–¢ –ü–û –ê–£–î–ò–¢–£ SEO –°–¢–ê–¢–ï–ô\n")
            f.write("=" * 50 + "\n")
            f.write(f"–î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
            f.write(f"–í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π: {report['total']}\n")
            f.write(f"–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç: {report['ok']}\n")
            f.write(f"–û—à–∏–±–∫–∏: {report['errors']}\n")
            f.write(f"–ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è: {report['percentage']:.1f}%\n\n")
            
            if report['error_details']:
                f.write("–î–ï–¢–ê–õ–ò –û–®–ò–ë–û–ö:\n")
                f.write("-" * 30 + "\n")
                for detail in report['error_details']:
                    f.write(f"ID {detail['post_id']}: {detail['title']}\n")
                    f.write(f"–û–∂–∏–¥–∞–ª–æ—Å—å: {detail['expected_keyword']}\n")
                    f.write(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {detail['image_title']} / {detail['image_alt']}\n")
                    for issue in detail['issues']:
                        f.write(f"‚ùå {issue}\n")
                    f.write("\n")
        
        log.info(f"üìÑ –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {report_file}")
        
        if report['errors'] == 0:
            log.info("üéâ –í–°–ï –°–¢–ê–¢–¨–ò –°–û–û–¢–í–ï–¢–°–¢–í–£–Æ–¢ –ö–†–ò–¢–ï–†–ò–Ø–ú!")
        else:
            log.warning(f"‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï {report['errors']} –°–¢–ê–¢–ï–ô")
            
    except Exception as e:
        log.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞—É–¥–∏—Ç–µ: {e}")

if __name__ == "__main__":
    main()

