#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import mysql.connector
import requests
import base64
import json
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö WordPress
DB_CONFIG = {
    'host': 'localhost',
    'user': 'm1shqamai2_worp6',
    'password': '9nUQkM*Q2cnvy379',
    'database': 'm1shqamai2_worp6'
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WordPress API
WORDPRESS_URL = "https://ecopackpro.ru"
APPLICATION_PASSWORD = "7EKI VWpH 96dg VI3H ovlI hI4E"
USERNAME = "rtep1976@me.com"

class Article7917SEOUpdaterV2:
    def __init__(self):
        self.db_config = DB_CONFIG
        self.wp_url = WORDPRESS_URL
        self.username = USERNAME
        self.app_password = APPLICATION_PASSWORD
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        credentials = f"{self.username}:{self.app_password}"
        encoded_credentials = base64.b64encode(credentials.encode()).decode()
        
        self.headers = {
            'Authorization': f'Basic {encoded_credentials}',
            'Content-Type': 'application/json',
            'User-Agent': 'WordPress-API-Client/1.0'
        }
    
    def connect_to_database(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö MySQL"""
        try:
            connection = mysql.connector.connect(**self.db_config)
            return connection
        except mysql.connector.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            return None
    
    def force_update_yoast_meta(self, post_id, focus_keyword, meta_description):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö Yoast SEO"""
        connection = self.connect_to_database()
        if not connection:
            return False
        
        try:
            cursor = connection.cursor()
            
            # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ Yoast SEO –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã–µ
            cursor.execute("""
                DELETE FROM wp_postmeta 
                WHERE post_id = %s 
                AND meta_key IN (
                    '_yoast_wpseo_focuskw',
                    '_yoast_wpseo_metadesc',
                    '_yoast_wpseo_title',
                    '_yoast_wpseo_canonical'
                )
            """, (post_id,))
            
            deleted_count = cursor.rowcount
            print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–µ—Ç–∞ –∑–∞–ø–∏—Å–µ–π: {deleted_count}")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã–µ
            meta_inserts = [
                ('_yoast_wpseo_focuskw', focus_keyword),
                ('_yoast_wpseo_metadesc', meta_description),
                ('_yoast_wpseo_title', f"{focus_keyword}"),
                ('_yoast_wpseo_canonical', f"{self.wp_url}/courier-packages-with-pocket/")
            ]
            
            success_count = 0
            
            for meta_key, meta_value in meta_inserts:
                cursor.execute("""
                    INSERT INTO wp_postmeta (post_id, meta_key, meta_value) 
                    VALUES (%s, %s, %s)
                """, (post_id, meta_key, meta_value))
                
                if cursor.rowcount > 0:
                    success_count += 1
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ: {meta_key}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {meta_key}")
            
            connection.commit()
            
            if success_count == len(meta_inserts):
                print(f"‚úÖ –í—Å–µ –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã–µ Yoast SEO —Å–æ–∑–¥–∞–Ω—ã ({success_count}/{len(meta_inserts)})")
                return True
            else:
                print(f"‚ö†Ô∏è  –ß–∞—Å—Ç–∏—á–Ω–æ —Å–æ–∑–¥–∞–Ω–æ: {success_count}/{len(meta_inserts)}")
                return False
                
        except mysql.connector.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False
        finally:
            connection.close()
    
    def update_post_slug(self, post_id, new_slug):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ slug (—è—Ä–ª—ã–∫–∞) –ø–æ—Å—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        connection = self.connect_to_database()
        if not connection:
            return False
        
        try:
            cursor = connection.cursor()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º post_name (slug)
            cursor.execute("""
                UPDATE wp_posts 
                SET post_name = %s 
                WHERE ID = %s
            """, (new_slug, post_id))
            
            connection.commit()
            
            if cursor.rowcount > 0:
                print(f"‚úÖ Slug –æ–±–Ω–æ–≤–ª–µ–Ω: {new_slug}")
                return True
            else:
                print(f"‚ùå Slug –Ω–µ –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω")
                return False
                
        except mysql.connector.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è slug: {e}")
            return False
        finally:
            connection.close()
    
    def get_current_post_data(self, post_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        connection = self.connect_to_database()
        if not connection:
            return None
        
        try:
            cursor = connection.cursor(dictionary=True)
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞
            cursor.execute("""
                SELECT ID, post_title, post_name, post_content, post_excerpt
                FROM wp_posts 
                WHERE ID = %s
            """, (post_id,))
            
            post_data = cursor.fetchone()
            
            if not post_data:
                print(f"‚ùå –ü–æ—Å—Ç —Å ID {post_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return None
            
            # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã–µ Yoast SEO
            cursor.execute("""
                SELECT meta_key, meta_value
                FROM wp_postmeta 
                WHERE post_id = %s 
                AND meta_key IN (
                    '_yoast_wpseo_focuskw',
                    '_yoast_wpseo_metadesc',
                    '_yoast_wpseo_title',
                    '_yoast_wpseo_canonical'
                )
            """, (post_id,))
            
            meta_data = cursor.fetchall()
            meta_dict = {row['meta_key']: row['meta_value'] for row in meta_data}
            
            post_data['meta'] = meta_dict
            return post_data
            
        except mysql.connector.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")
            return None
        finally:
            connection.close()
    
    def verify_changes(self, post_id):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"""
        print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –ò–ó–ú–ï–ù–ï–ù–ò–ô –î–õ–Ø –ü–û–°–¢–ê {post_id}")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        post_data = self.get_current_post_data(post_id)
        if not post_data:
            return False
        
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {post_data['post_title']}")
        print(f"üîó Slug: {post_data['post_name']}")
        
        meta = post_data.get('meta', {})
        print(f"üéØ –§–æ–∫—É—Å–Ω–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {meta.get('_yoast_wpseo_focuskw', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}")
        print(f"üìù –ú–µ—Ç–∞ –æ–ø–∏—Å–∞–Ω–∏–µ: {meta.get('_yoast_wpseo_metadesc', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}")
        print(f"üè∑Ô∏è  SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫: {meta.get('_yoast_wpseo_title', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}")
        print(f"üîó –ö–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞: {meta.get('_yoast_wpseo_canonical', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ API
        try:
            response = requests.get(
                f"{self.wp_url}/wp-json/wp/v2/posts/{post_id}",
                headers=self.headers,
                timeout=30
            )
            
            if response.status_code == 200:
                api_data = response.json()
                print(f"\nüåê API –ø—Ä–æ–≤–µ—Ä–∫–∞:")
                print(f"   –°—Å—ã–ª–∫–∞: {api_data.get('link', '–ù–ï –ù–ê–ô–î–ï–ù–ê')}")
                print(f"   Slug –≤ API: {api_data.get('slug', '–ù–ï –ù–ê–ô–î–ï–ù')}")
                
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API –ø—Ä–æ–≤–µ—Ä–∫–∏: {response.status_code}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ API –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
            return False
    
    def fix_article_7917(self):
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏ 7917"""
        print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–ê–¢–¨–ò 7917 - SEO –ü–ê–†–ê–ú–ï–¢–†–´ (V2)")
        print("=" * 60)
        
        post_id = 7917
        focus_keyword = "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —Å –∫–∞—Ä–º–∞–Ω–æ–º"
        new_slug = "courier-packages-with-pocket"
        meta_description = f"{focus_keyword} - –ü–∞–∫–µ—Ç—ã —Å –∫–∞—Ä–º–∞–Ω–æ–º –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ vs —Å–∞–º–æ–∫–ª–µ—è—â–∏–µ—Å—è SD, —Ä–∞–∑–º–µ—Ä—ã –ê5/–ê6, –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ –ª–æ–≥–∏—Å—Ç–∏–∫–µ. –£—Å–∫–æ—Ä–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ 30%. –¶–µ–Ω—ã –æ—Ç 3 —Ä—É–±/—à—Ç!"
        
        print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        print(f"   Post ID: {post_id}")
        print(f"   –§–æ–∫—É—Å–Ω–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {focus_keyword}")
        print(f"   –ù–æ–≤—ã–π slug: {new_slug}")
        print(f"   –ú–µ—Ç–∞ –æ–ø–∏—Å–∞–Ω–∏–µ: {meta_description[:80]}...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        print(f"\nüîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...")
        current_data = self.get_current_post_data(post_id)
        if not current_data:
            return False
        
        print(f"üìÑ –¢–µ–∫—É—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: {current_data['post_title']}")
        print(f"üîó –¢–µ–∫—É—â–∏–π slug: {current_data['post_name']}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º slug
        print(f"\nüîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ slug...")
        slug_success = self.update_post_slug(post_id, new_slug)
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã–µ Yoast SEO
        print(f"\nüîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö Yoast SEO...")
        meta_success = self.force_update_yoast_meta(post_id, focus_keyword, meta_description)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
        verify_success = self.verify_changes(post_id)
        
        # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"\n" + "=" * 60)
        print("üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢")
        print("=" * 60)
        
        print(f"üîó Slug –æ–±–Ω–æ–≤–ª—ë–Ω: {'‚úÖ' if slug_success else '‚ùå'}")
        print(f"üìù –ú–µ—Ç–∞ –¥–∞–Ω–Ω—ã–µ Yoast SEO: {'‚úÖ' if meta_success else '‚ùå'}")
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {'‚úÖ' if verify_success else '‚ùå'}")
        
        if slug_success and meta_success and verify_success:
            print(f"\nüéâ –°–¢–ê–¢–¨–Ø 7917 –£–°–ü–ï–®–ù–û –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
            print(f"üîó –ù–æ–≤–∞—è —Å—Å—ã–ª–∫–∞: {self.wp_url}/{new_slug}/")
            print(f"üì± –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: {self.wp_url}/wp-admin/post.php?post={post_id}&action=edit")
            return True
        else:
            print(f"\n‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ò–õ–û–°–¨ –° –û–®–ò–ë–ö–ê–ú–ò")
            return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    updater = Article7917SEOUpdaterV2()
    success = updater.fix_article_7917()
    
    if success:
        print(f"\n‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print(f"üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—å—é –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ Yoast SEO Premium")
    else:
        print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏")

if __name__ == "__main__":
    main()
