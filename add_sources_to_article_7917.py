#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import mysql.connector
import requests
from requests.exceptions import RequestException
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö WordPress
DB_CONFIG = {
    'host': 'localhost',
    'user': 'm1shqamai2_worp6',
    'password': '9nUQkM*Q2cnvy379',
    'database': 'm1shqamai2_worp6'
}

# –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç—å–∏ –æ –∫—É—Ä—å–µ—Ä—Å–∫–∏—Ö –ø–∞–∫–µ—Ç–∞—Ö —Å –∫–∞—Ä–º–∞–Ω–æ–º
POTENTIAL_SOURCES = [
    {
        'title': '–ì–û–°–¢ –† 51760-2001 - –ü–∞–∫–µ—Ç—ã –∏ –º–µ—à–∫–∏ –∏–∑ –ø–æ–ª–∏–º–µ—Ä–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
        'url': 'https://docs.cntd.ru/document/1200009321'
    },
    {
        'title': '–ü—Ä–∞–≤–∏–ª–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ—á—Ç–æ–≤—ã—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π - –ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏',
        'url': 'https://www.pochta.ru/support/post-rules'
    },
    {
        'title': '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —É–ø–∞–∫–æ–≤–∫–µ —Ç–æ–≤–∞—Ä–æ–≤ - Wildberries',
        'url': 'https://www.wildberries.ru/services/prodavayte-na-wildberries'
    },
    {
        'title': '–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã —É–ø–∞–∫–æ–≤–∫–∏ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ - Ozon',
        'url': 'https://docs.ozon.ru/global/packaging/'
    },
    {
        'title': '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ä–µ–≥–ª–∞–º–µ–Ω—Ç –¢–∞–º–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–æ—é–∑–∞ –¢–† –¢–° 005/2011',
        'url': 'https://docs.cntd.ru/document/902307617'
    },
    {
        'title': '–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –∑–∞–∫–æ–Ω –æ–± —É–ø–∞–∫–æ–≤–∫–µ –∏ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–µ',
        'url': 'https://www.consultant.ru/document/cons_doc_LAW_19109/'
    }
]

class SourcesAdder:
    def __init__(self):
        self.db_config = DB_CONFIG
        self.verified_sources = []
    
    def connect_to_database(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö MySQL"""
        try:
            connection = mysql.connector.connect(**self.db_config)
            return connection
        except mysql.connector.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            return None
    
    def check_url_status(self, url, timeout=10):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL (—Å—Ç–∞—Ç—É—Å 200)"""
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        try:
            print(f"   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: {url[:60]}...", end=" ")
            response = requests.get(url, headers=headers, timeout=timeout, allow_redirects=True)
            
            if response.status_code == 200:
                print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
                return True, response.status_code
            else:
                print(f"‚ùå –°—Ç–∞—Ç—É—Å: {response.status_code}")
                return False, response.status_code
                
        except RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:50]}")
            return False, None
    
    def verify_sources(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
        print("üîç –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –ò–°–¢–û–ß–ù–ò–ö–û–í")
        print("=" * 80)
        
        for i, source in enumerate(POTENTIAL_SOURCES, 1):
            print(f"\n{i}. {source['title']}")
            
            is_valid, status = self.check_url_status(source['url'])
            
            if is_valid:
                self.verified_sources.append(source)
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            time.sleep(1)
        
        print(f"\n‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(POTENTIAL_SOURCES)}")
        print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(self.verified_sources)}")
        
        return self.verified_sources
    
    def get_article_content(self, post_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç–∞—Ç—å–∏"""
        connection = self.connect_to_database()
        if not connection:
            return None
        
        try:
            cursor = connection.cursor(dictionary=True)
            
            cursor.execute("""
                SELECT post_content
                FROM wp_posts 
                WHERE ID = %s
            """, (post_id,))
            
            result = cursor.fetchone()
            return result['post_content'] if result else None
            
        except mysql.connector.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
            return None
        finally:
            connection.close()
    
    def create_sources_section(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ HTML —Ä–∞–∑–¥–µ–ª–∞ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏"""
        if not self.verified_sources:
            return ""
        
        sources_html = '\n\n<!-- wp:heading -->\n'
        sources_html += '<h2 class="wp-block-heading" id="istochniki">üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏</h2>\n'
        sources_html += '<!-- /wp:heading -->\n\n'
        
        sources_html += '<!-- wp:paragraph -->\n'
        sources_html += '<p>–ü—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Å—Ç–∞—Ç—å–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å —Å–ª–µ–¥—É—é—â–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:</p>\n'
        sources_html += '<!-- /wp:paragraph -->\n\n'
        
        sources_html += '<!-- wp:list -->\n<ul>\n'
        
        for source in self.verified_sources:
            sources_html += f'<li><a href="{source["url"]}" target="_blank" rel="noopener noreferrer">{source["title"]}</a></li>\n'
        
        sources_html += '</ul>\n<!-- /wp:list -->\n'
        
        return sources_html
    
    def update_article_content(self, post_id, new_content):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç–∞—Ç—å–∏"""
        connection = self.connect_to_database()
        if not connection:
            return False
        
        try:
            cursor = connection.cursor()
            
            cursor.execute("""
                UPDATE wp_posts
                SET post_content = %s,
                    post_modified = NOW(),
                    post_modified_gmt = UTC_TIMESTAMP()
                WHERE ID = %s
            """, (new_content, post_id))
            
            connection.commit()
            return True
            
        except mysql.connector.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
            connection.rollback()
            return False
        finally:
            connection.close()
    
    def add_sources_to_article(self, post_id):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ —Å—Ç–∞—Ç—å—é"""
        print(f"\nüìù –î–û–ë–ê–í–õ–ï–ù–ò–ï –ò–°–¢–û–ß–ù–ò–ö–û–í –í –°–¢–ê–¢–¨–Æ ID {post_id}")
        print("=" * 80)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        print("1Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç–∞—Ç—å–∏...")
        current_content = self.get_article_content(post_id)
        
        if not current_content:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏")
            return False
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ ({len(current_content)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        if 'id="istochniki"' in current_content or 'üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏' in current_content:
            print("‚ö†Ô∏è  –†–∞–∑–¥–µ–ª '–ò—Å—Ç–æ—á–Ω–∏–∫–∏' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å—Ç–∞—Ç—å–µ!")
            user_input = input("–•–æ—Ç–∏—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å –µ–≥–æ? (yes/no): ").lower()
            if user_input != 'yes':
                print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                return False
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ä–∞–∑–¥–µ–ª –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (–ø—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥)
            # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ —É–¥–∞–ª—è–µ–º –≤—Å—ë –ø–æ—Å–ª–µ –Ω–µ–≥–æ –¥–æ –∫–æ–Ω—Ü–∞
            if 'üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏' in current_content:
                idx = current_content.rfind('<!-- wp:heading -->')
                if idx > 0 and 'üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏' in current_content[idx:]:
                    current_content = current_content[:idx].rstrip()
        
        # –°–æ–∑–¥–∞—ë–º —Ä–∞–∑–¥–µ–ª –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        print("2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...")
        sources_section = self.create_sources_section()
        
        if not sources_section:
            print("‚ùå –ù–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è")
            return False
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ä–∞–∑–¥–µ–ª —Å {len(self.verified_sources)} –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ –∫–æ–Ω–µ—Ü —Å—Ç–∞—Ç—å–∏
        new_content = current_content.rstrip() + sources_section
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—å—é
        print("3Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        success = self.update_article_content(post_id, new_content)
        
        if success:
            print("‚úÖ –°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
            print(f"\nüìä –î–û–ë–ê–í–õ–ï–ù–û –ò–°–¢–û–ß–ù–ò–ö–û–í: {len(self.verified_sources)}")
            print(f"üìù –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä —Å—Ç–∞—Ç—å–∏: {len(new_content)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"\nüîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—å—é: https://ecopackpro.ru/wp-admin/post.php?post={post_id}&action=edit")
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é")
            return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 80)
    print("üìö –î–û–ë–ê–í–õ–ï–ù–ò–ï –ò–°–¢–û–ß–ù–ò–ö–û–í –í –°–¢–ê–¢–¨–Æ 7917")
    print("=" * 80)
    print("–°—Ç–∞—Ç—å—è: –ö—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —Å –∫–∞—Ä–º–∞–Ω–æ–º")
    print("=" * 80)
    
    adder = SourcesAdder()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    verified = adder.verify_sources()
    
    if not verified:
        print("\n‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è!")
        return
    
    print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(verified)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
    print("\n–°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:")
    for i, source in enumerate(verified, 1):
        print(f"{i}. {source['title']}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ —Å—Ç–∞—Ç—å—é
    print("\n" + "=" * 80)
    success = adder.add_sources_to_article(7917)
    
    if success:
        print("\nüéâ –ò–°–¢–û–ß–ù–ò–ö–ò –£–°–ü–ï–®–ù–û –î–û–ë–ê–í–õ–ï–ù–´ –í –°–¢–ê–¢–¨–Æ!")
    else:
        print("\n‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –î–û–ë–ê–í–ò–¢–¨ –ò–°–¢–û–ß–ù–ò–ö–ò")

if __name__ == "__main__":
    main()
