#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è CSS –æ—à–∏–±–æ–∫ –≤ —Å—Ç–∞—Ç—å—è—Ö
"""

import mysql.connector
import re

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
DB_CONFIG = {
    'host': 'localhost',
    'user': 'm1shqamai2_worp6',
    'password': '9nUQkM*Q2cnvy379',
    'database': 'm1shqamai2_worp6',
    'charset': 'utf8mb4'
}

def fix_css_errors(html):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫–∏ CSS –≤ HTML"""
    
    # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º style –∞—Ç—Ä–∏–±—É—Ç—ã —Å <br> —Ç–µ–≥–∞–º–∏
    # –ò—â–µ–º pattern: style="<br>    background: ...<br>    border: ...<br>"
    def fix_style_attr(match):
        style_content = match.group(1)
        # –£–±–∏—Ä–∞–µ–º –≤—Å–µ <br> —Ç–µ–≥–∏ –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
        style_content = re.sub(r'<br>\s*', ' ', style_content)
        style_content = re.sub(r'\s+', ' ', style_content).strip()
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Ç–æ—á–∫–∏ —Å –∑–∞–ø—è—Ç–æ–π
        style_content = re.sub(r';\s*;', ';', style_content)
        return f'style="{style_content}"'
    
    html = re.sub(r'style="(<br>\s*[^"]*)"', fix_style_attr, html)
    
    # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –±–ª–æ–∫–∏ CSS –∫–æ–¥–∞
    # –ò—â–µ–º –±–ª–æ–∫–∏ —Ç–∏–ø–∞: color: #007cba;<br>margin: 0 0 15px 0;<br>font-size: 18px;
    css_pattern = r'(color:\s*[^;]+;)\s*<br>\s*(margin:[^;]+;)\s*<br>\s*(font-size:[^;]+;)\s*<br>\s*(text-align:[^;]+;)\s*<br>\s*">'
    html = re.sub(css_pattern, r'\1 \2 \3 \4">', html)
    
    # 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ CSS –±–ª–æ–∫–∏
    css_pattern2 = r'(background:\s*[^;]+;)\s*<br>\s*(padding:[^;]+;)\s*<br>\s*(border-radius:[^;]+;)\s*<br>\s*(border:[^;]+;)\s*<br>\s*">'
    html = re.sub(css_pattern2, r'\1 \2 \3 \4">', html)
    
    # 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º display –∏ grid —Å–≤–æ–π—Å—Ç–≤–∞
    grid_pattern = r'(display:\s*[^;]+;)\s*<br>\s*(grid-template-columns:[^;]+;)\s*<br>\s*(gap:[^;]+;)\s*<br>\s*(align-items:[^;]+;)\s*<br>\s*">'
    html = re.sub(grid_pattern, r'\1 \2 \3 \4">', html)
    
    # 5. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º flex —Å–≤–æ–π—Å—Ç–≤–∞
    flex_pattern = r'(display:\s*[^;]+;)\s*<br>\s*(align-items:[^;]+;)\s*<br>\s*">'
    html = re.sub(flex_pattern, r'\1 \2">', html)
    
    # 6. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º margin –∏ padding –±–ª–æ–∫–∏
    margin_pattern = r'(margin-top:\s*[^;]+;)\s*<br>\s*(text-align:[^;]+;)\s*<br>\s*(font-size:[^;]+;)\s*<br>\s*(color:[^;]+;)\s*<br>\s*">'
    html = re.sub(margin_pattern, r'\1 \2 \3 \4">', html)
    
    # 7. –£–±–∏—Ä–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –æ–¥–∏–Ω–æ—á–Ω—ã–µ <br> –≤ style –∞—Ç—Ä–∏–±—É—Ç–∞—Ö
    html = re.sub(r'style="([^"]*<br>[^"]*)"', lambda m: f'style="{m.group(1).replace("<br>", " ").strip()}"', html)
    
    # 8. –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ style –∞—Ç—Ä–∏–±—É—Ç–∞—Ö
    html = re.sub(r'style="\s*([^"]*)\s*"', lambda m: f'style="{re.sub(r"\s+", " ", m.group(1)).strip()}"', html)
    
    # 9. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Ç–µ–≥–∏
    html = re.sub(r'<p>\s*</p>', '', html)
    html = re.sub(r'<div>\s*</div>', '', html)
    
    # 10. –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ <br> —Ç–µ–≥–∏ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
    html = re.sub(r'^\s*<br>\s*', '', html)
    html = re.sub(r'\s*<br>\s*$', '', html)
    
    return html

def main():
    print("=" * 70)
    print("–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï CSS –û–®–ò–ë–û–ö –í –°–¢–ê–¢–¨–Ø–•")
    print("=" * 70)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        print("\n1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = mysql.connector.connect(**DB_CONFIG)
        cursor = conn.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ë–î")
        
        # –ù–∞–π—Ç–∏ —Å—Ç–∞—Ç—å–∏ —Å CSS –æ—à–∏–±–∫–∞–º–∏
        print("\n2. –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π —Å CSS –æ—à–∏–±–∫–∞–º–∏...")
        cursor.execute("""
            SELECT ID, post_title 
            FROM wp_posts 
            WHERE post_type = 'post' 
            AND post_status = 'publish'
            AND post_content LIKE '%<br>%style%'
            ORDER BY ID
        """)
        
        articles = cursor.fetchall()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π —Å CSS –æ—à–∏–±–∫–∞–º–∏: {len(articles)}")
        
        if len(articles) == 0:
            print("‚ùå –°—Ç–∞—Ç—å–∏ —Å CSS –æ—à–∏–±–∫–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        # –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫–∞–∂–¥—É—é —Å—Ç–∞—Ç—å—é
        print("\n3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CSS –æ—à–∏–±–æ–∫...")
        success_count = 0
        
        for article_id, article_title in articles:
            try:
                # –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                cursor.execute("SELECT post_content FROM wp_posts WHERE ID = %s", (article_id,))
                current_content = cursor.fetchone()[0]
                
                # –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å CSS –æ—à–∏–±–∫–∏ –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                css_errors_before = current_content.count('<br>')
                
                # –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                fixed_content = fix_css_errors(current_content)
                
                # –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å CSS –æ—à–∏–±–∫–∏ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                css_errors_after = fixed_content.count('<br>')
                
                # –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                if current_content != fixed_content:
                    cursor.execute("""
                        UPDATE wp_posts 
                        SET post_content = %s, 
                            post_modified = NOW(), 
                            post_modified_gmt = NOW() 
                        WHERE ID = %s
                    """, (fixed_content, article_id))
                    
                    print(f"‚úÖ –°—Ç–∞—Ç—å—è {article_id}: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {css_errors_before - css_errors_after} CSS –æ—à–∏–±–æ–∫")
                    success_count += 1
                else:
                    print(f"‚è≠Ô∏è –°—Ç–∞—Ç—å—è {article_id}: –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
                
                conn.commit()
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—å–∏ {article_id}: {e}")
                conn.rollback()
        
        # –ó–∞–∫—Ä—ã—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        cursor.close()
        conn.close()
        
        print("\n" + "=" * 70)
        print(f"‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï CSS –û–®–ò–ë–û–ö –ó–ê–í–ï–†–®–ï–ù–û!")
        print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {success_count}")
        print(f"‚è≠Ô∏è –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {len(articles) - success_count}")
        print("=" * 70)
        
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()
