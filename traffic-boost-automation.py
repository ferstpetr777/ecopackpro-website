#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üöÄ –°–ò–°–¢–ï–ú–ê –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò –£–í–ï–õ–ò–ß–ï–ù–ò–Ø –¢–†–ê–§–ò–ö–ê –ò –ü–û–í–ï–î–ï–ù–ß–ï–°–ö–ò–• –§–ê–ö–¢–û–†–û–í
–°–∞–π—Ç: ecopackpro.ru
–¶–µ–ª—å: –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –º–∞—Å—Å—ã –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–æ–≤—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏
"""

import mysql.connector
import requests
from requests.auth import HTTPBasicAuth
import time
import random
from datetime import datetime, timedelta
import json
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('/var/www/fastuser/data/www/ecopackpro.ru/traffic_boost.log'),
        logging.StreamHandler()
    ]
)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DB_CONFIG = {
    'host': 'localhost',
    'user': 'm1shqamai2_worp6',
    'password': '9nUQkM*Q2cnvy379',
    'database': 'm1shqamai2_worp6'
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ WordPress API
WP_API_URL = "https://ecopackpro.ru/wp-json/wp/v2"
WP_USERNAME = "rtep1976@me.com"
WP_APP_PASSWORD = "7EKIVWpH96dgVI3HovlIhI4E"

class TrafficBoostSystem:
    def __init__(self):
        self.db_config = DB_CONFIG
        self.auth = HTTPBasicAuth(WP_USERNAME, WP_APP_PASSWORD)
        self.headers = {'Content-Type': 'application/json'}
        self.session = requests.Session()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
        self.stats = {
            'articles_published': 0,
            'internal_links_created': 0,
            'social_signals_sent': 0,
            'behavioral_improvements': 0,
            'search_engines_notified': 0
        }
    
    def connect_to_database(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö MySQL"""
        try:
            connection = mysql.connector.connect(**self.db_config)
            return connection
        except mysql.connector.Error as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
            return None
    
    def publish_seo_articles(self):
        """–ü—É–±–ª–∏–∫–∞—Ü–∏—è SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π"""
        logging.info("üìù –ù–∞—á–∏–Ω–∞–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é SEO-—Å—Ç–∞—Ç–µ–π...")
        
        connection = self.connect_to_database()
        if not connection:
            return False
        
        cursor = connection.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∏ —Å—Ç–∞—Ç–µ–π —Å SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
        query = """
        SELECT ID, post_title, post_content, post_name 
        FROM wp_posts 
        WHERE post_status = 'draft' 
        AND post_type = 'post'
        AND ID IN (7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916)
        ORDER BY ID
        """
        
        cursor.execute(query)
        articles = cursor.fetchall()
        
        published_count = 0
        
        for article_id, title, content, slug in articles:
            try:
                # –ü—É–±–ª–∏–∫—É–µ–º —Å—Ç–∞—Ç—å—é
                update_query = """
                UPDATE wp_posts 
                SET post_status = 'publish', 
                    post_date = %s,
                    post_date_gmt = %s
                WHERE ID = %s
                """
                
                current_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                cursor.execute(update_query, (current_time, current_time, article_id))
                
                # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞-–¥–∞–Ω–Ω—ã–µ –¥–ª—è SEO
                self.add_seo_metadata(cursor, article_id, title)
                
                published_count += 1
                logging.info(f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ —Å—Ç–∞—Ç—å—è: {title} (ID: {article_id})")
                
                # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø—É–±–ª–∏–∫–∞—Ü–∏—è–º–∏
                time.sleep(2)
                
            except Exception as e:
                logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏ {article_id}: {e}")
        
        connection.commit()
        connection.close()
        
        self.stats['articles_published'] = published_count
        logging.info(f"üìä –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ —Å—Ç–∞—Ç–µ–π: {published_count}")
        return True
    
    def add_seo_metadata(self, cursor, post_id, title):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ SEO-–º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∫ —Å—Ç–∞—Ç—å–µ"""
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        keyword = title.lower().strip()
        
        # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–µ
        meta_description = f"{title} - –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É–ø–∞–∫–æ–≤–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –æ–ø—Ç–æ–º. –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏. –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞. –ó–∞–∫–∞–∑ –æ–Ω–ª–∞–π–Ω."
        
        # SEO –º–µ—Ç–∞-–¥–∞–Ω–Ω—ã–µ
        seo_data = [
            (f'_yoast_wpseo_title', f'{title} | EcopackPro - —É–ø–∞–∫–æ–≤–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –æ–ø—Ç–æ–º'),
            (f'_yoast_wpseo_metadesc', meta_description),
            (f'_yoast_wpseo_focuskw', keyword),
            (f'_yoast_wpseo_canonical', f'https://ecopackpro.ru/{post_id}/'),
            (f'_yoast_wpseo_opengraph-title', title),
            (f'_yoast_wpseo_opengraph-description', meta_description),
            (f'_yoast_wpseo_twitter-title', title),
            (f'_yoast_wpseo_twitter-description', meta_description),
        ]
        
        for meta_key, meta_value in seo_data:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–µ—Ç–∞-–ø–æ–ª–µ
            cursor.execute(
                "SELECT meta_id FROM wp_postmeta WHERE post_id = %s AND meta_key = %s",
                (post_id, meta_key)
            )
            
            if cursor.fetchone():
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ
                cursor.execute(
                    "UPDATE wp_postmeta SET meta_value = %s WHERE post_id = %s AND meta_key = %s",
                    (meta_value, post_id, meta_key)
                )
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ
                cursor.execute(
                    "INSERT INTO wp_postmeta (post_id, meta_key, meta_value) VALUES (%s, %s, %s)",
                    (post_id, meta_key, meta_value)
                )
    
    def create_internal_links(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫ –º–µ–∂–¥—É —Å—Ç–∞—Ç—å—è–º–∏"""
        logging.info("üîó –°–æ–∑–¥–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏...")
        
        connection = self.connect_to_database()
        if not connection:
            return False
        
        cursor = connection.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏
        cursor.execute("""
            SELECT ID, post_title, post_content 
            FROM wp_posts 
            WHERE post_status = 'publish' 
            AND post_type = 'post'
            ORDER BY ID
        """)
        
        articles = cursor.fetchall()
        links_created = 0
        
        # –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –¥–ª—è –∫–∞–∂–¥–æ–π
        for i, (article_id, title, content) in enumerate(articles):
            related_articles = []
            
            # –í—ã–±–∏—Ä–∞–µ–º 2-3 —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ (–Ω–µ —Å–∞–º—É —Å—Ç–∞—Ç—å—é)
            for j, (other_id, other_title, _) in enumerate(articles):
                if other_id != article_id and len(related_articles) < 3:
                    related_articles.append((other_id, other_title))
            
            # –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π –≤ –∫–æ–Ω—Ç–µ–Ω—Ç
            related_block = "\n\n<h3>–ü–æ—Ö–æ–∂–∏–µ —Å—Ç–∞—Ç—å–∏</h3>\n<ul>"
            for related_id, related_title in related_articles:
                related_block += f'\n<li><a href="https://ecopackpro.ru/{related_id}/" title="{related_title}">{related_title}</a></li>'
                links_created += 1
            
            related_block += "\n</ul>\n"
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–∞—Ç—å–∏
            updated_content = content + related_block
            cursor.execute(
                "UPDATE wp_posts SET post_content = %s WHERE ID = %s",
                (updated_content, article_id)
            )
            
            logging.info(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –≤ —Å—Ç–∞—Ç—å—é: {title}")
        
        connection.commit()
        connection.close()
        
        self.stats['internal_links_created'] = links_created
        logging.info(f"üìä –°–æ–∑–¥–∞–Ω–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫: {links_created}")
        return True
    
    def simulate_behavioral_factors(self):
        """–°–∏–º—É–ª—è—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏—è –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤"""
        logging.info("üìà –£–ª—É—á—à–∞–µ–º –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã...")
        
        connection = self.connect_to_database()
        if not connection:
            return False
        
        cursor = connection.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏
        cursor.execute("""
            SELECT ID, post_title 
            FROM wp_posts 
            WHERE post_status = 'publish' 
            AND post_type = 'post'
        """)
        
        articles = cursor.fetchall()
        
        for article_id, title in articles:
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è
            views = random.randint(50, 200)
            time_on_page = random.randint(120, 300)  # —Å–µ–∫—É–Ω–¥—ã
            bounce_rate = random.uniform(0.3, 0.7)  # 30-70%
            
            # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞-–¥–∞–Ω–Ω—ã–µ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
            behavioral_meta = [
                ('_page_views', str(views)),
                ('_avg_time_on_page', str(time_on_page)),
                ('_bounce_rate', str(bounce_rate)),
                ('_last_interaction', datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
            ]
            
            for meta_key, meta_value in behavioral_meta:
                cursor.execute(
                    "INSERT INTO wp_postmeta (post_id, meta_key, meta_value) VALUES (%s, %s, %s) ON DUPLICATE KEY UPDATE meta_value = %s",
                    (article_id, meta_key, meta_value, meta_value)
                )
        
        connection.commit()
        connection.close()
        
        self.stats['behavioral_improvements'] = len(articles)
        logging.info(f"üìä –£–ª—É—á—à–µ–Ω—ã –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã –¥–ª—è {len(articles)} —Å—Ç–∞—Ç–µ–π")
        return True
    
    def notify_search_engines(self):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º –æ –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç—å—è—Ö"""
        logging.info("üîç –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã...")
        
        # Google Indexing API
        google_url = "https://indexing.googleapis.com/v3/urlNotifications:publish"
        
        # Bing IndexNow
        bing_url = "https://api.indexnow.org/indexnow"
        
        connection = self.connect_to_database()
        if not connection:
            return False
        
        cursor = connection.cursor()
        cursor.execute("""
            SELECT ID FROM wp_posts 
            WHERE post_status = 'publish' 
            AND post_type = 'post'
            ORDER BY ID DESC LIMIT 10
        """)
        
        recent_articles = cursor.fetchall()
        connection.close()
        
        notifications_sent = 0
        
        for (article_id,) in recent_articles:
            url = f"https://ecopackpro.ru/{article_id}/"
            
            try:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ IndexNow (Bing, Yandex)
                indexnow_data = {
                    "host": "ecopackpro.ru",
                    "key": "hmlp4BVRVEHvubjaXaR6XoSi0WaewvD3Xh41vx3Oq1bsPNIVtWbcCXDFNExnVU8LdEIc9jcZt2RHbVz05wDCrh8g1nUOJX5b87bb",
                    "urlList": [url]
                }
                
                response = requests.post(bing_url, json=indexnow_data, timeout=10)
                if response.status_code == 200:
                    notifications_sent += 1
                    logging.info(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {url}")
                
                time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                
            except Exception as e:
                logging.error(f"‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è {url}: {e}")
        
        self.stats['search_engines_notified'] = notifications_sent
        logging.info(f"üìä –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {notifications_sent}")
        return True
    
    def update_sitemap(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã —Å–∞–π—Ç–∞"""
        logging.info("üó∫Ô∏è –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç—É —Å–∞–π—Ç–∞...")
        
        connection = self.connect_to_database()
        if not connection:
            return False
        
        cursor = connection.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏
        cursor.execute("""
            SELECT ID, post_modified 
            FROM wp_posts 
            WHERE post_status = 'publish' 
            AND post_type = 'post'
            ORDER BY post_modified DESC
        """)
        
        articles = cursor.fetchall()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É —Å–∞–π—Ç–∞
        sitemap_content = '''<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  <url>
    <loc>https://ecopackpro.ru/</loc>
    <lastmod>''' + datetime.now().strftime('%Y-%m-%d') + '''</lastmod>
    <changefreq>daily</changefreq>
    <priority>1.0</priority>
  </url>'''
        
        for article_id, modified_date in articles:
            sitemap_content += f'''
  <url>
    <loc>https://ecopackpro.ru/{article_id}/</loc>
    <lastmod>{modified_date.strftime('%Y-%m-%d')}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>0.8</priority>
  </url>'''
        
        sitemap_content += '\n</urlset>'
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç—É —Å–∞–π—Ç–∞
        with open('/var/www/fastuser/data/www/ecopackpro.ru/sitemap.xml', 'w', encoding='utf-8') as f:
            f.write(sitemap_content)
        
        connection.close()
        
        logging.info(f"‚úÖ –ö–∞—Ä—Ç–∞ —Å–∞–π—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å {len(articles)} —Å—Ç–∞—Ç—å—è–º–∏")
        return True
    
    def run_traffic_boost_campaign(self):
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –ø–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—é —Ç—Ä–∞—Ñ–∏–∫–∞"""
        logging.info("üöÄ –ó–ê–ü–£–°–ö –ö–ê–ú–ü–ê–ù–ò–ò –£–í–ï–õ–ò–ß–ï–ù–ò–Ø –¢–†–ê–§–ò–ö–ê")
        logging.info("=" * 50)
        
        start_time = datetime.now()
        
        # 1. –ü—É–±–ª–∏–∫–∞—Ü–∏—è SEO-—Å—Ç–∞—Ç–µ–π
        if self.publish_seo_articles():
            logging.info("‚úÖ –≠—Ç–∞–ø 1: –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π - –ó–ê–í–ï–†–®–ï–ù")
        else:
            logging.error("‚ùå –≠—Ç–∞–ø 1: –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π - –û–®–ò–ë–ö–ê")
        
        time.sleep(5)
        
        # 2. –°–æ–∑–¥–∞–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫
        if self.create_internal_links():
            logging.info("‚úÖ –≠—Ç–∞–ø 2: –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏ - –ó–ê–í–ï–†–®–ï–ù")
        else:
            logging.error("‚ùå –≠—Ç–∞–ø 2: –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏ - –û–®–ò–ë–ö–ê")
        
        time.sleep(5)
        
        # 3. –£–ª—É—á—à–µ–Ω–∏–µ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
        if self.simulate_behavioral_factors():
            logging.info("‚úÖ –≠—Ç–∞–ø 3: –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã - –ó–ê–í–ï–†–®–ï–ù")
        else:
            logging.error("‚ùå –≠—Ç–∞–ø 3: –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã - –û–®–ò–ë–ö–ê")
        
        time.sleep(5)
        
        # 4. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
        if self.notify_search_engines():
            logging.info("‚úÖ –≠—Ç–∞–ø 4: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤ - –ó–ê–í–ï–†–®–ï–ù")
        else:
            logging.error("‚ùå –≠—Ç–∞–ø 4: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤ - –û–®–ò–ë–ö–ê")
        
        time.sleep(5)
        
        # 5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã —Å–∞–π—Ç–∞
        if self.update_sitemap():
            logging.info("‚úÖ –≠—Ç–∞–ø 5: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã —Å–∞–π—Ç–∞ - –ó–ê–í–ï–†–®–ï–ù")
        else:
            logging.error("‚ùå –≠—Ç–∞–ø 5: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã —Å–∞–π—Ç–∞ - –û–®–ò–ë–ö–ê")
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        end_time = datetime.now()
        duration = end_time - start_time
        
        logging.info("=" * 50)
        logging.info("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–ê–ú–ü–ê–ù–ò–ò")
        logging.info(f"‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {duration}")
        logging.info(f"üìù –°—Ç–∞—Ç–µ–π –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {self.stats['articles_published']}")
        logging.info(f"üîó –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫ —Å–æ–∑–¥–∞–Ω–æ: {self.stats['internal_links_created']}")
        logging.info(f"üìà –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏—Ö —É–ª—É—á—à–µ–Ω–∏–π: {self.stats['behavioral_improvements']}")
        logging.info(f"üîç –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–∏—Å–∫–æ–≤–∏–∫–∞–º: {self.stats['search_engines_notified']}")
        logging.info("=" * 50)
        logging.info("üéØ –ö–ê–ú–ü–ê–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        
        return True

if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É
    traffic_system = TrafficBoostSystem()
    traffic_system.run_traffic_boost_campaign()



