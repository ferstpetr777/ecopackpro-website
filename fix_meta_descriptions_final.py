#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
from requests.auth import HTTPBasicAuth
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ WordPress API
WP_API_URL = "https://ecopackpro.ru/wp-json/wp/v2"
WP_USERNAME = "rtep1976@me.com"
WP_APP_PASSWORD = "7EKIVWpH96dgVI3HovlIhI4E"

# –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏—è–º–∏
ARTICLES_TO_FIX = [
    7913, 7915, 7926, 7928, 7929, 7930, 7932, 7934, 7938, 7939, 
    7941, 7943, 7944, 7945, 7946, 7947, 7949
]

class MetaDescriptionFixer:
    def __init__(self):
        self.auth = HTTPBasicAuth(WP_USERNAME, WP_APP_PASSWORD)
        self.headers = {'Content-Type': 'application/json'}
    
    def fix_meta_description(self, post_id):
        """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –æ–¥–Ω–æ–π —Å—Ç–∞—Ç—å–∏"""
        print(f"\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏—è ID {post_id}")
        print("-" * 50)
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ—Å—Ç
            response = requests.get(
                f"{WP_API_URL}/posts/{post_id}",
                auth=self.auth,
                headers=self.headers,
                timeout=60
            )
            
            if response.status_code != 200:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞: {response.status_code}")
                return False
            
            post_data = response.json()
            post_title = post_data['title']['rendered']
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã–µ
            meta = post_data.get('meta', {})
            focus_keyword = meta.get('_yoast_wpseo_focuskw', '')
            current_meta_description = meta.get('_yoast_wpseo_metadesc', '')
            
            print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {post_title}")
            print(f"üéØ –§–æ–∫—É—Å–Ω–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {focus_keyword}")
            
            if not focus_keyword:
                print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ–∫—É—Å–Ω–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ")
                return False
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ñ–æ–∫—É—Å–Ω–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
            if current_meta_description and not current_meta_description.lower().startswith(focus_keyword.lower()):
                # –ï—Å–ª–∏ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
                new_meta_description = f"{focus_keyword} - {current_meta_description}"
                print(f"üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–µ: {new_meta_description[:80]}...")
            else:
                print("‚úÖ –ú–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–µ —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ")
                return True
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–µ
            update_data = {
                'meta': {
                    '_yoast_wpseo_metadesc': new_meta_description
                }
            }
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å—Ç
            update_response = requests.post(
                f"{WP_API_URL}/posts/{post_id}",
                auth=self.auth,
                headers=self.headers,
                json=update_data,
                timeout=60
            )
            
            if update_response.status_code == 200:
                print("‚úÖ –ú–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {update_response.status_code} - {update_response.text}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return False
    
    def fix_all_meta_descriptions(self):
        """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π"""
        print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ï–¢–ê-–û–ü–ò–°–ê–ù–ò–ô")
        print("=" * 60)
        print("–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏—è, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–∞—á–∏–Ω–∞–ª–∏—Å—å —Å —Ñ–æ–∫—É—Å–Ω–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞")
        print("=" * 60)
        
        success_count = 0
        failed_count = 0
        
        for i, post_id in enumerate(ARTICLES_TO_FIX, 1):
            print(f"\nüìã {i}/{len(ARTICLES_TO_FIX)}")
            
            if self.fix_meta_description(post_id):
                success_count += 1
            else:
                failed_count += 1
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            if i < len(ARTICLES_TO_FIX):
                time.sleep(1)
        
        print(f"\n" + "=" * 60)
        print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
        print("=" * 60)
        print(f"üìö –í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π: {len(ARTICLES_TO_FIX)}")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: {success_count}")
        print(f"‚ùå –û—à–∏–±–∫–∏: {failed_count}")
        
        if success_count == len(ARTICLES_TO_FIX):
            print(f"\nüéâ –í–°–ï –ú–ï–¢–ê-–û–ü–ò–°–ê–ù–ò–Ø –£–°–ü–ï–®–ù–û –ò–°–ü–†–ê–í–õ–ï–ù–´!")
        else:
            print(f"\n‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ {failed_count} —Å—Ç–∞—Ç–µ–π")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    fixer = MetaDescriptionFixer()
    fixer.fix_all_meta_descriptions()

if __name__ == "__main__":
    main()
