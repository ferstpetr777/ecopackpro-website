#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è SEO –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –≤ WordPress —Å—Ç–∞—Ç—å–∏
–û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ –ø–ª–∞–≥–∏–Ω–∞ AI-Scribe
"""

import requests
import json
import time
import sqlite3
import re
from urllib.parse import quote
import logging
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('/var/www/fastuser/data/www/ecopackpro.ru/seo_update.log'),
        logging.StreamHandler()
    ]
)
log = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WordPress API
WP_API_URL = "https://ecopackpro.ru/wp-json/wp/v2"
WP_USERNAME = "rtep1976@me.com"
WP_APPLICATION_PASSWORD = "7EKI VWpH 96dg VI3H ovlI hI4E"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞
DB_PATH = "/root/seo_project/SEO_ecopackpro/articles.db"

def get_wordpress_credentials():
    """–ü–æ–ª—É—á–∏—Ç—å —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ WordPress"""
    return WP_USERNAME, WP_APPLICATION_PASSWORD

def get_articles_from_db():
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—å–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞"""
    try:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏ —Å SEO –¥–∞–Ω–Ω—ã–º–∏
        cursor.execute("""
            SELECT keyword, meta_description 
            FROM articles 
            WHERE keyword IS NOT NULL AND meta_description IS NOT NULL
            ORDER BY id
        """)
        
        articles = cursor.fetchall()
        cursor.close()
        conn.close()
        
        log.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(articles)} —Å—Ç–∞—Ç–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        return articles
        
    except Exception as e:
        log.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –ë–î: {e}")
        return []

def get_all_posts_from_wordpress():
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã –∏–∑ WordPress"""
    try:
        username, password = get_wordpress_credentials()
        auth = (username, password)
        
        all_posts = []
        page = 1
        per_page = 100
        
        while True:
            url = f"{WP_API_URL}/posts"
            params = {
                'status': 'draft',
                'per_page': per_page,
                'page': page,
                'orderby': 'id',
                'order': 'asc'
            }
            
            response = requests.get(url, auth=auth, params=params, timeout=60)
            
            if response.status_code == 200:
                posts = response.json()
                if not posts:
                    break
                all_posts.extend(posts)
                log.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(posts)} –ø–æ—Å—Ç–æ–≤ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {page}")
                page += 1
                time.sleep(0.5)
            else:
                log.error(f"–û—à–∏–±–∫–∞ API WordPress: {response.status_code}")
                break
                
        log.info(f"–í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ {len(all_posts)} –ø–æ—Å—Ç–æ–≤ –∏–∑ WordPress")
        return all_posts
        
    except Exception as e:
        log.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤: {e}")
        return []

def generate_seo_slug(keyword):
    """–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å SEO-friendly slug –∏–∑ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞"""
    # –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –≤ –ª–∞—Ç–∏–Ω–∏—Ü—É
    translit_map = {
        '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'yo',
        '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm',
        '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
        '—Ñ': 'f', '—Ö': 'h', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'sch',
        '—ä': '', '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya',
        '–ê': 'A', '–ë': 'B', '–í': 'V', '–ì': 'G', '–î': 'D', '–ï': 'E', '–Å': 'Yo',
        '–ñ': 'Zh', '–ó': 'Z', '–ò': 'I', '–ô': 'Y', '–ö': 'K', '–õ': 'L', '–ú': 'M',
        '–ù': 'N', '–û': 'O', '–ü': 'P', '–†': 'R', '–°': 'S', '–¢': 'T', '–£': 'U',
        '–§': 'F', '–•': 'H', '–¶': 'Ts', '–ß': 'Ch', '–®': 'Sh', '–©': 'Sch',
        '–™': '', '–´': 'Y', '–¨': '', '–≠': 'E', '–Æ': 'Yu', '–Ø': 'Ya'
    }
    
    # –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è
    slug = ""
    for char in keyword:
        if char in translit_map:
            slug += translit_map[char]
        elif char.isalnum():
            slug += char
        else:
            slug += "-"
    
    # –û—á–∏—Å—Ç–∫–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    slug = re.sub(r'-+', '-', slug)  # –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–µ—Ñ–∏—Å—ã –Ω–∞ –æ–¥–∏–Ω
    slug = slug.strip('-')  # –£–±–∏—Ä–∞–µ–º –¥–µ—Ñ–∏—Å—ã –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
    slug = slug.lower()  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
    
    return slug

def update_post_seo_meta(post_id, seo_title, meta_description, focus_keyword, slug):
    """–û–±–Ω–æ–≤–∏—Ç—å SEO –º–µ—Ç–∞-–¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞ –≤ WordPress"""
    try:
        username, password = get_wordpress_credentials()
        auth = (username, password)
        
        # 1. –û–±–Ω–æ–≤–ª—è–µ–º slug –ø–æ—Å—Ç–∞
        update_data = {
            'slug': slug
        }
        
        url = f"{WP_API_URL}/posts/{post_id}"
        response = requests.post(url, auth=auth, json=update_data, timeout=30)
        
        if response.status_code != 200:
            log.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è slug –¥–ª—è –ø–æ—Å—Ç–∞ {post_id}: {response.status_code}")
            return False
        
        # 2. –û–±–Ω–æ–≤–ª—è–µ–º SEO –º–µ—Ç–∞-–¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ update_post_meta
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –ø–æ–¥—Ö–æ–¥, —á—Ç–æ –∏ –≤ AI-Scribe –ø–ª–∞–≥–∏–Ω–µ
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–æ–π SEO –ø–ª–∞–≥–∏–Ω –∞–∫—Ç–∏–≤–µ–Ω, –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è
        meta_updates = []
        
        # Yoast SEO –ø–æ–ª—è (–æ—Å–Ω–æ–≤–Ω—ã–µ)
        meta_updates.extend([
            {
                'meta_key': '_yoast_wpseo_title',
                'meta_value': seo_title
            },
            {
                'meta_key': '_yoast_wpseo_metadesc',
                'meta_value': meta_description
            },
            {
                'meta_key': '_yoast_wpseo_focuskw',
                'meta_value': focus_keyword
            }
        ])
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ Yoast –ø–æ–ª—è –¥–ª—è –ª—É—á—à–µ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        meta_updates.extend([
            {
                'meta_key': '_yoast_wpseo_focuskw_text_input',
                'meta_value': focus_keyword
            },
            {
                'meta_key': '_yoast_wpseo_content_score',
                'meta_value': '90'
            }
        ])
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ –º–µ—Ç–∞-–ø–æ–ª–µ
        success_count = 0
        for meta_update in meta_updates:
            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º WordPress REST API –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Ç–∞-–¥–∞–Ω–Ω—ã—Ö
                meta_url = f"{WP_API_URL}/posts/{post_id}/meta"
                meta_data = {
                    'key': meta_update['meta_key'],
                    'value': meta_update['meta_value']
                }
                
                meta_response = requests.post(meta_url, auth=auth, json=meta_data, timeout=30)
                
                if meta_response.status_code in [200, 201]:
                    success_count += 1
                    log.info(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {meta_update['meta_key']} –¥–ª—è –ø–æ—Å—Ç–∞ {post_id}")
                else:
                    log.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å {meta_update['meta_key']}: {meta_response.status_code}")
                    
            except Exception as e:
                log.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {meta_update['meta_key']}: {e}")
        
        log.info(f"–û–±–Ω–æ–≤–ª–µ–Ω–æ {success_count}/{len(meta_updates)} –º–µ—Ç–∞-–ø–æ–ª–µ–π –¥–ª—è –ø–æ—Å—Ç–∞ {post_id}")
        return success_count > 0
        
    except Exception as e:
        log.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SEO –¥–ª—è –ø–æ—Å—Ç–∞ {post_id}: {e}")
        return False

def test_single_article():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç–∞—Ç—å–µ (ID 7956)"""
    log.info("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–ê –û–î–ù–û–ô –°–¢–ê–¢–¨–ï")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
    articles = get_articles_from_db()
    if not articles:
        log.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç—å–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        return False
    
    # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç–∞—Ç—å—é (—Å–∞–º–æ–∫–ª–µ—è—â–∏–µ—Å—è –∫–∞—Ä–º–∞–Ω—ã)
    keyword, meta_description = articles[-1]
    
    log.info(f"–ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {keyword}")
    log.info(f"–ú–µ—Ç–∞ –æ–ø–∏—Å–∞–Ω–∏–µ: {meta_description}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SEO –¥–∞–Ω–Ω—ã–µ
    seo_title = keyword  # SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫ = –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
    focus_keyword = keyword  # –§–æ–∫—É—Å–Ω–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ = –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
    slug = generate_seo_slug(keyword)  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º slug
    
    log.info(f"SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫: {seo_title}")
    log.info(f"Slug: {slug}")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã –∏–∑ WordPress
    posts = get_all_posts_from_wordpress()
    if not posts:
        log.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å—Ç—ã –∏–∑ WordPress")
        return False
    
    # –ò—â–µ–º –ø–æ—Å—Ç —Å ID 7956
    target_post = None
    for post in posts:
        if post['id'] == 7956:
            target_post = post
            break
    
    if not target_post:
        log.error("–ü–æ—Å—Ç —Å ID 7956 –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    log.info(f"–ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç: {target_post['title']['rendered']}")
    log.info(f"–¢–µ–∫—É—â–∏–π slug: {target_post['slug']}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º SEO –¥–∞–Ω–Ω—ã–µ
    success = update_post_seo_meta(
        post_id=7956,
        seo_title=seo_title,
        meta_description=meta_description,
        focus_keyword=focus_keyword,
        slug=slug
    )
    
    if success:
        log.info("‚úÖ SEO –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        log.info("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ WordPress:")
        log.info("   - –§–æ–∫—É—Å–Ω–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–æ")
        log.info("   - SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω")
        log.info("   - –ú–µ—Ç–∞ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–æ")
        log.info("   - –Ø—Ä–ª—ã–∫ (slug) –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω")
        return True
    else:
        log.error("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SEO –¥–∞–Ω–Ω—ã—Ö")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    log.info("üöÄ –ó–ê–ü–£–°–ö –°–ö–†–ò–ü–¢–ê –î–û–ë–ê–í–õ–ï–ù–ò–Ø SEO –ê–¢–†–ò–ë–£–¢–û–í")
    log.info("=" * 50)
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç–∞—Ç—å–µ
        success = test_single_article()
        
        if success:
            log.info("‚úÖ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù!")
            log.info("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ –≤—Å–µ–º —Å—Ç–∞—Ç—å—è–º")
        else:
            log.error("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–®–ï–õ")
            
    except Exception as e:
        log.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()

