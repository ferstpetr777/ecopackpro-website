<?php
/**
 * –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ—Ä–∑–∏–Ω—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
 * –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º WordPress
require_once('wp-load.php');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
if (!current_user_can('administrator')) {
    die('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
}

?>
<!DOCTYPE html>
<html>
<head>
    <title>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ—Ä–∑–∏–Ω—ã - EcopackPro</title>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }
        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .log-section { margin: 20px 0; }
        .log-section h3 { background: #0073aa; color: white; padding: 10px; margin: 0; border-radius: 4px 4px 0 0; }
        .log-content { background: #1e1e1e; color: #00ff00; padding: 15px; border-radius: 0 0 4px 4px; font-family: 'Courier New', monospace; font-size: 12px; max-height: 400px; overflow-y: auto; }
        .status { padding: 10px; margin: 10px 0; border-radius: 4px; }
        .status.success { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .status.error { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .status.warning { background: #fff3cd; color: #856404; border: 1px solid #ffeaa7; }
        .controls { margin: 20px 0; }
        .btn { padding: 10px 20px; margin: 5px; border: none; border-radius: 4px; cursor: pointer; }
        .btn-primary { background: #0073aa; color: white; }
        .btn-success { background: #28a745; color: white; }
        .btn-danger { background: #dc3545; color: white; }
        .auto-refresh { background: #17a2b8; color: white; }
        .timestamp { color: #888; font-size: 11px; }
        .ajax-test { background: #e9ecef; padding: 15px; margin: 10px 0; border-radius: 4px; }
    </style>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <div class="container">
        <h1>üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ—Ä–∑–∏–Ω—ã EcopackPro</h1>
        
        <div class="status success">
            <strong>‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ!</strong> –í—Å–µ —Å–æ–±—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –ª–æ–≥–∏.
        </div>

        <div class="controls">
            <button class="btn btn-primary" onclick="refreshLogs()">üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏</button>
            <button class="btn btn-success" onclick="clearLogs()">üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏</button>
            <button class="btn auto-refresh" onclick="toggleAutoRefresh()">‚è±Ô∏è –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</button>
            <button class="btn btn-primary" onclick="testAjax()">üß™ –¢–µ—Å—Ç AJAX</button>
        </div>

        <div class="ajax-test">
            <h4>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AJAX –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É:</h4>
            <button class="btn btn-success" onclick="testAddToCart(7143)">–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä ID 7143</button>
            <button class="btn btn-success" onclick="testAddToCart(7062)">–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä ID 7062</button>
            <div id="ajax-result" style="margin-top: 10px;"></div>
        </div>

        <div class="log-section">
            <h3>üìù Debug Log (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫)</h3>
            <div class="log-content" id="debug-log">
                <?php
                $debug_file = 'wp-content/debug.log';
                if (file_exists($debug_file)) {
                    $lines = file($debug_file);
                    $last_lines = array_slice($lines, -50);
                    foreach ($last_lines as $line) {
                        echo htmlspecialchars($line) . '<br>';
                    }
                } else {
                    echo 'Debug log –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç.';
                }
                ?>
            </div>
        </div>

        <div class="log-section">
            <h3>üõí WooCommerce Logs</h3>
            <div class="log-content" id="wc-logs">
                <?php
                $wc_logs = glob('wp-content/uploads/wc-logs/*.log');
                if ($wc_logs) {
                    $latest_log = max($wc_logs);
                    $lines = file($latest_log);
                    $last_lines = array_slice($lines, -30);
                    foreach ($last_lines as $line) {
                        echo htmlspecialchars($line) . '<br>';
                    }
                } else {
                    echo 'WooCommerce –ª–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.';
                }
                ?>
            </div>
        </div>

        <div class="log-section">
            <h3>üåê AJAX Endpoints</h3>
            <div class="status warning">
                <strong>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoints:</strong>
                <br>‚Ä¢ <a href="/wp-admin/admin-ajax.php?action=test" target="_blank">admin-ajax.php</a>
                <br>‚Ä¢ <a href="/wp-admin/admin-ajax.php?action=woocommerce_get_refreshed_fragments" target="_blank">get_refreshed_fragments</a>
            </div>
        </div>
    </div>

    <script>
        let autoRefreshInterval;
        let isAutoRefresh = false;

        function refreshLogs() {
            location.reload();
        }

        function clearLogs() {
            if (confirm('–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –ª–æ–≥–∏?')) {
                fetch('?action=clear_logs', {method: 'POST'})
                    .then(() => refreshLogs());
            }
        }

        function toggleAutoRefresh() {
            if (isAutoRefresh) {
                clearInterval(autoRefreshInterval);
                isAutoRefresh = false;
                document.querySelector('.auto-refresh').textContent = '‚è±Ô∏è –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ';
                document.querySelector('.auto-refresh').style.background = '#17a2b8';
            } else {
                autoRefreshInterval = setInterval(refreshLogs, 5000);
                isAutoRefresh = true;
                document.querySelector('.auto-refresh').textContent = '‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å';
                document.querySelector('.auto-refresh').style.background = '#dc3545';
            }
        }

        function testAjax() {
            document.getElementById('ajax-result').innerHTML = '<div style="color: blue;">–¢–µ—Å—Ç–∏—Ä—É—é AJAX...</div>';
            
            fetch('/wp-admin/admin-ajax.php?action=woocommerce_get_refreshed_fragments', {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: ''
            })
            .then(response => {
                if (response.ok) {
                    return response.text();
                } else {
                    throw new Error('HTTP ' + response.status);
                }
            })
            .then(data => {
                document.getElementById('ajax-result').innerHTML = '<div style="color: green;">‚úÖ AJAX —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω.</div>';
                console.log('AJAX Response:', data);
            })
            .catch(error => {
                document.getElementById('ajax-result').innerHTML = '<div style="color: red;">‚ùå AJAX –æ—à–∏–±–∫–∞: ' + error.message + '</div>';
                console.error('AJAX Error:', error);
            });
        }

        function testAddToCart(productId) {
            document.getElementById('ajax-result').innerHTML = '<div style="color: blue;">–î–æ–±–∞–≤–ª—è—é —Ç–æ–≤–∞—Ä ID ' + productId + '...</div>';
            
            fetch('/wp-admin/admin-ajax.php', {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: 'action=woocommerce_add_to_cart&product_id=' + productId + '&quantity=1'
            })
            .then(response => {
                if (response.ok) {
                    return response.text();
                } else {
                    throw new Error('HTTP ' + response.status);
                }
            })
            .then(data => {
                document.getElementById('ajax-result').innerHTML = '<div style="color: green;">‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω! –û—Ç–≤–µ—Ç: ' + data.substring(0, 100) + '...</div>';
                console.log('Add to Cart Response:', data);
                // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(refreshLogs, 2000);
            })
            .catch(error => {
                document.getElementById('ajax-result').innerHTML = '<div style="color: red;">‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: ' + error.message + '</div>';
                console.error('Add to Cart Error:', error);
            });
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (!isAutoRefresh) {
                toggleAutoRefresh();
            }
        }, 10000);
    </script>
</body>
</html>

<?php
// –û–±—Ä–∞–±–æ—Ç–∫–∞ AJAX –∑–∞–ø—Ä–æ—Å–æ–≤
if (isset($_POST['action']) && $_POST['action'] === 'clear_logs') {
    file_put_contents('wp-content/debug.log', '');
    file_put_contents('wp-content/uploads/wc-logs/debug-' . date('Y-m-d') . '.log', '');
    echo '–õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã';
    exit;
}
?>



