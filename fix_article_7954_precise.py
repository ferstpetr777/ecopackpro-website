#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import base64
import json
from datetime import datetime
from bs4 import BeautifulSoup
import re

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WordPress API
WORDPRESS_URL = "https://ecopackpro.ru"
APPLICATION_PASSWORD = "7EKI VWpH 96dg VI3H ovlI hI4E"
USERNAME = "rtep1976@me.com"

class FeaturedImageFixer:
    def __init__(self, url, username, app_password):
        self.url = url.rstrip('/')
        self.username = username
        self.app_password = app_password
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        credentials = f"{username}:{app_password}"
        encoded_credentials = base64.b64encode(credentials.encode()).decode()
        
        self.headers = {
            'Authorization': f'Basic {encoded_credentials}',
            'Content-Type': 'application/json',
            'User-Agent': 'WordPress-API-Client/1.0'
        }
    
    def test_connection(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WordPress API"""
        try:
            response = requests.get(
                f"{self.url}/wp-json/wp/v2/users/me",
                headers=self.headers,
                timeout=30
            )
            
            if response.status_code == 200:
                user_data = response.json()
                print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data.get('name', 'Unknown')}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {response.status_code} - {response.text}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return False
    
    def get_post_data(self, post_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞ –≤–∫–ª—é—á–∞—è –≥–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞ —Å –≥–ª–∞–≤–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
            response = requests.get(
                f"{self.url}/wp-json/wp/v2/posts/{post_id}",
                headers=self.headers,
                params={'_embed': 'wp:featuredmedia'},
                timeout=30
            )
            
            if response.status_code == 200:
                return response.json()
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞ {post_id}: {response.status_code}")
                return None
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞ {post_id}: {e}")
            return None
    
    def get_featured_image_info(self, post_data):
        """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–ª–∞–≤–Ω–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏"""
        featured_media = post_data.get('_embedded', {}).get('wp:featuredmedia', [])
        
        if featured_media:
            media_info = featured_media[0]
            return {
                'id': media_info.get('id'),
                'url': media_info.get('source_url'),
                'alt': media_info.get('alt_text', ''),
                'title': media_info.get('title', {}).get('rendered', ''),
                'caption': media_info.get('caption', {}).get('rendered', '')
            }
        return None
    
    def find_and_replace_placeholder_image(self, content, featured_img, post_title):
        """–ü–æ–∏—Å–∫ –∏ –∑–∞–º–µ–Ω–∞ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        try:
            soup = BeautifulSoup(content, 'html.parser')
            
            # –ò—â–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            img_tags = soup.find_all('img')
            
            for img_tag in img_tags:
                src = img_tag.get('src', '')
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
                if 'Tvist-PRO' in src or 'placeholder' in src.lower():
                    print(f"üîÑ –ù–∞–π–¥–µ–Ω placeholder: {src.split('/')[-1]}")
                    
                    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    new_img = soup.new_tag('img')
                    new_img['alt'] = post_title
                    new_img['class'] = f"wp-image-{featured_img['id']}"
                    new_img['decoding'] = "async"
                    new_img['height'] = "1024"
                    new_img['loading'] = "lazy"
                    new_img['sizes'] = "auto, (max-width: 1536px) 100vw, 1536px"
                    new_img['src'] = featured_img['url']
                    new_img['srcset'] = f"{featured_img['url']} 1536w, {featured_img['url']} 300w, {featured_img['url']} 1024w, {featured_img['url']} 600w, {featured_img['url']} 64w"
                    new_img['style'] = "border-radius: 12px; box-shadow: 0 8px 25px rgba(0,0,0,0.15); transition: transform 0.3s ease, box-shadow 0.3s ease; max-width: 100%; height: auto;"
                    new_img['width'] = "1536"
                    
                    # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤—ã–º
                    img_tag.replace_with(new_img)
                    
                    print(f"‚úÖ –ó–∞–º–µ–Ω–µ–Ω–æ –Ω–∞: {featured_img['url'].split('/')[-1]}")
            
            return str(soup)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
            return content
    
    def fix_post_images(self, post_id):
        """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–æ—Å—Ç–µ"""
        print(f"\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Å—Ç–∞—Ç—å–µ ID {post_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞
        post_data = self.get_post_data(post_id)
        if not post_data:
            return False
        
        post_title = post_data.get('title', {}).get('rendered', '')
        post_content = post_data.get('content', {}).get('rendered', '')
        
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {post_title}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–ª–∞–≤–Ω–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
        featured_img = self.get_featured_image_info(post_data)
        if not featured_img:
            print("‚ùå –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        print(f"üñºÔ∏è  –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {featured_img['url'].split('/')[-1]}")
        print(f"üìù Alt —Ç–µ–∫—Å—Ç: {featured_img['alt']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ placeholder –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ
        if 'Tvist-PRO' not in post_content:
            print("‚úÖ Placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return True
        
        print("üö® –ù–∞–π–¥–µ–Ω placeholder –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ")
        
        # –ó–∞–º–µ–Ω—è–µ–º placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        new_content = self.find_and_replace_placeholder_image(post_content, featured_img, post_title)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if new_content == post_content:
            print("‚ÑπÔ∏è  –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
            return True
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        try:
            update_data = {
                'content': new_content
            }
            
            response = requests.post(
                f"{self.url}/wp-json/wp/v2/posts/{post_id}",
                headers=self.headers,
                json=update_data,
                timeout=30
            )
            
            if response.status_code == 200:
                print("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {response.status_code} - {response.text}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
            return False
    
    def verify_fix(self, post_id):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Å—Ç–∞—Ç—å–∏ ID {post_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞
        post_data = self.get_post_data(post_id)
        if not post_data:
            return False
        
        post_title = post_data.get('title', {}).get('rendered', '')
        post_content = post_data.get('content', {}).get('rendered', '')
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–ª–∞–≤–Ω–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
        featured_img = self.get_featured_image_info(post_data)
        if not featured_img:
            print("‚ùå –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        placeholder_count = post_content.count('Tvist-PRO')
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:")
        print(f"  - Placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {placeholder_count}")
        
        if placeholder_count == 0:
            print("‚úÖ –í—Å–µ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
            return True
        else:
            print("‚ùå –û—Å—Ç–∞–ª–∏—Å—å placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –¢–û–ß–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–ê–¢–¨–ò 7954 - –ü–ê–ö–ï–¢–´ –ò–ó –í–û–ó–î–£–®–ù–û-–ü–£–ó–´–†–¨–ö–û–í–û–ô –ü–õ–Å–ù–ö–ò")
    print("=" * 80)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    fixer = FeaturedImageFixer(WORDPRESS_URL, USERNAME, APPLICATION_PASSWORD)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WordPress API...")
    if not fixer.test_connection():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WordPress API")
        return
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ 7954
    test_post_id = 7954
    print(f"\nüß™ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–ê–¢–¨–ò ID {test_post_id}")
    print("=" * 50)
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    fix_success = fixer.fix_post_images(test_post_id)
    
    if fix_success:
        print("\nüîç –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê:")
        verify_success = fixer.verify_fix(test_post_id)
        
        if verify_success:
            print(f"\n‚úÖ –°—Ç–∞—Ç—å—è ID {test_post_id} —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
            print(f"üîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {WORDPRESS_URL}/?p={test_post_id}&preview=true")
        else:
            print(f"\n‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –¥–ª—è —Å—Ç–∞—Ç—å–∏ ID {test_post_id}")
    else:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫ —Å—Ç–∞—Ç—å–µ ID {test_post_id}")

if __name__ == "__main__":
    main()
