#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import mysql.connector
import requests
from requests.exceptions import RequestException
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö WordPress
DB_CONFIG = {
    'host': 'localhost',
    'user': 'm1shqamai2_worp6',
    'password': '9nUQkM*Q2cnvy379',
    'database': 'm1shqamai2_worp6'
}

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
POTENTIAL_SOURCES = [
    {
        'title': '–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –∑–∞–∫–æ–Ω –æ–± —É–ø–∞–∫–æ–≤–∫–µ –∏ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–µ —Ç–æ–≤–∞—Ä–æ–≤',
        'url': 'https://www.consultant.ru/document/cons_doc_LAW_19109/'
    },
    {
        'title': '–≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è —É–ø–∞–∫–æ–≤–∫–∏ - –¢–∏–ø—ã –∫—É—Ä—å–µ—Ä—Å–∫–∏—Ö –ø–∞–∫–µ—Ç–æ–≤',
        'url': 'https://ru.wikipedia.org/wiki/–ü–æ–ª–∏—ç—Ç–∏–ª–µ–Ω–æ–≤—ã–π_–ø–∞–∫–µ—Ç'
    },
    {
        'title': '–ì–û–°–¢ –Ω–∞ –ø–æ–ª–∏–º–µ—Ä–Ω—É—é —É–ø–∞–∫–æ–≤–∫—É - –†–æ—Å–°—Ç–∞–Ω–¥–∞—Ä—Ç',
        'url': 'https://www.gost.ru/'
    },
    {
        'title': '–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ç–æ—Ä–≥–æ–≤–ª–∏ –†–§',
        'url': 'https://minpromtorg.gov.ru/'
    },
    {
        'title': '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∫–æ–º–∏—Ç–µ—Ç –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏–∏ —É–ø–∞–∫–æ–≤–∫–∏',
        'url': 'https://www.rst.gov.ru/'
    },
    {
        'title': '–ê—Å—Å–æ—Ü–∏–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –ø–æ–ª–∏–º–µ—Ä–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–∏',
        'url': 'https://www.unipack.ru/'
    },
    {
        'title': '–†–æ—Å–ë–∏–∑–Ω–µ—Å–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ - –†—ã–Ω–æ–∫ —É–ø–∞–∫–æ–≤–∫–∏',
        'url': 'https://www.rbc.ru/'
    }
]

class ImprovedSourcesAdder:
    def __init__(self):
        self.db_config = DB_CONFIG
        self.verified_sources = []
    
    def connect_to_database(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö MySQL"""
        try:
            connection = mysql.connector.connect(**self.db_config)
            return connection
        except mysql.connector.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            return None
    
    def check_url_status(self, url, timeout=15):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π"""
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
            'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
            'Accept-Encoding': 'gzip, deflate',
            'Connection': 'keep-alive',
        }
        
        try:
            print(f"   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: {url[:70]}...", end=" ")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º session –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            session = requests.Session()
            response = session.get(
                url, 
                headers=headers, 
                timeout=timeout, 
                allow_redirects=True,
                verify=True
            )
            
            if response.status_code == 200:
                print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
                return True, response.status_code
            else:
                print(f"‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å: {response.status_code}")
                return False, response.status_code
                
        except RequestException as e:
            error_msg = str(e)[:50]
            print(f"‚ùå –û—à–∏–±–∫–∞: {error_msg}")
            return False, None
    
    def verify_sources(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
        print("üîç –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –ò–°–¢–û–ß–ù–ò–ö–û–í")
        print("=" * 80)
        
        for i, source in enumerate(POTENTIAL_SOURCES, 1):
            print(f"\n{i}. {source['title']}")
            
            is_valid, status = self.check_url_status(source['url'])
            
            if is_valid:
                self.verified_sources.append(source)
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            time.sleep(2)
        
        print(f"\n‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(POTENTIAL_SOURCES)}")
        print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(self.verified_sources)}")
        
        return self.verified_sources
    
    def get_article_content(self, post_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç–∞—Ç—å–∏"""
        connection = self.connect_to_database()
        if not connection:
            return None
        
        try:
            cursor = connection.cursor(dictionary=True)
            
            cursor.execute("""
                SELECT post_content
                FROM wp_posts 
                WHERE ID = %s
            """, (post_id,))
            
            result = cursor.fetchone()
            return result['post_content'] if result else None
            
        except mysql.connector.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
            return None
        finally:
            connection.close()
    
    def create_sources_section(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ HTML —Ä–∞–∑–¥–µ–ª–∞ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏"""
        if not self.verified_sources:
            return ""
        
        sources_html = '\n\n<!-- wp:heading -->\n'
        sources_html += '<h2 class="wp-block-heading" id="istochniki">üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏</h2>\n'
        sources_html += '<!-- /wp:heading -->\n\n'
        
        sources_html += '<!-- wp:paragraph -->\n'
        sources_html += '<p>–ü—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å —Å–ª–µ–¥—É—é—â–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:</p>\n'
        sources_html += '<!-- /wp:paragraph -->\n\n'
        
        sources_html += '<!-- wp:list -->\n<ul class="wp-block-list">\n'
        
        for source in self.verified_sources:
            sources_html += f'<li><a href="{source["url"]}" target="_blank" rel="noopener noreferrer nofollow">{source["title"]}</a></li>\n'
        
        sources_html += '</ul>\n<!-- /wp:list -->\n\n'
        
        sources_html += '<!-- wp:paragraph {"fontSize":"small"} -->\n'
        sources_html += '<p class="has-small-font-size"><em>–í—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã –Ω–∞ –º–æ–º–µ–Ω—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.</em></p>\n'
        sources_html += '<!-- /wp:paragraph -->\n'
        
        return sources_html
    
    def update_article_content(self, post_id, new_content):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç–∞—Ç—å–∏"""
        connection = self.connect_to_database()
        if not connection:
            return False
        
        try:
            cursor = connection.cursor()
            
            cursor.execute("""
                UPDATE wp_posts
                SET post_content = %s,
                    post_modified = NOW(),
                    post_modified_gmt = UTC_TIMESTAMP()
                WHERE ID = %s
            """, (new_content, post_id))
            
            connection.commit()
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: {cursor.rowcount}")
            return True
            
        except mysql.connector.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
            connection.rollback()
            return False
        finally:
            connection.close()
    
    def add_sources_to_article(self, post_id):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ —Å—Ç–∞—Ç—å—é"""
        print(f"\nüìù –î–û–ë–ê–í–õ–ï–ù–ò–ï –ò–°–¢–û–ß–ù–ò–ö–û–í –í –°–¢–ê–¢–¨–Æ ID {post_id}")
        print("=" * 80)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        print("1Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç–∞—Ç—å–∏...")
        current_content = self.get_article_content(post_id)
        
        if not current_content:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏")
            return False
        
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ ({len(current_content)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ä–∞–∑–¥–µ–ª –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å
        if 'id="istochniki"' in current_content or 'üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏' in current_content:
            print("‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª '–ò—Å—Ç–æ—á–Ω–∏–∫–∏', –∑–∞–º–µ–Ω—è—é...")
            
            # –ò—â–µ–º –Ω–∞—á–∞–ª–æ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
            markers = ['<!-- wp:heading -->\n<h2 class="wp-block-heading" id="istochniki">',
                      '<h2 class="wp-block-heading" id="istochniki">']
            
            for marker in markers:
                if marker in current_content:
                    idx = current_content.rfind(marker)
                    if idx > 0:
                        current_content = current_content[:idx].rstrip()
                        print(f"‚úÖ –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π —Ä–∞–∑–¥–µ–ª, –Ω–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä: {len(current_content)} —Å–∏–º–≤–æ–ª–æ–≤")
                        break
        
        # –°–æ–∑–¥–∞—ë–º —Ä–∞–∑–¥–µ–ª –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        print("2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...")
        sources_section = self.create_sources_section()
        
        if not sources_section:
            print("‚ùå –ù–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è")
            return False
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ä–∞–∑–¥–µ–ª —Å {len(self.verified_sources)} –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ –∫–æ–Ω–µ—Ü —Å—Ç–∞—Ç—å–∏
        new_content = current_content.rstrip() + sources_section
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—å—é
        print("3Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        success = self.update_article_content(post_id, new_content)
        
        if success:
            print("\n" + "=" * 80)
            print("‚úÖ –°–¢–ê–¢–¨–Ø –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù–ê!")
            print("=" * 80)
            print(f"üìä –î–æ–±–∞–≤–ª–µ–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(self.verified_sources)}")
            print(f"üìù –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä —Å—Ç–∞—Ç—å–∏: {len(new_content)} —Å–∏–º–≤–æ–ª–æ–≤ (+{len(new_content) - len(current_content)} —Å–∏–º–≤–æ–ª–æ–≤)")
            print(f"\nüîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—å—é:")
            print(f"   –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: https://ecopackpro.ru/wp-admin/post.php?post={post_id}&action=edit")
            print(f"   –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä: https://ecopackpro.ru/?p={post_id}&preview=true")
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é")
            return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 80)
    print("üìö –î–û–ë–ê–í–õ–ï–ù–ò–ï –ò–°–¢–û–ß–ù–ò–ö–û–í –í –°–¢–ê–¢–¨–Æ 7917")
    print("=" * 80)
    print("–°—Ç–∞—Ç—å—è: –ö—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —Å –∫–∞—Ä–º–∞–Ω–æ–º")
    print("=" * 80)
    
    adder = ImprovedSourcesAdder()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    verified = adder.verify_sources()
    
    if not verified:
        print("\n‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è!")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –ø–æ–∑–∂–µ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤—Ä—É—á–Ω—É—é.")
        return
    
    print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(verified)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
    print("\nüìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:")
    for i, source in enumerate(verified, 1):
        print(f"   {i}. {source['title']}")
        print(f"      {source['url']}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ —Å—Ç–∞—Ç—å—é
    print("\n" + "=" * 80)
    success = adder.add_sources_to_article(7917)
    
    if success:
        print("\nüéâ –ó–ê–î–ê–ß–ê –í–´–ü–û–õ–ù–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∫–∞–∫ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ä–∞–∑–¥–µ–ª '–ò—Å—Ç–æ—á–Ω–∏–∫–∏' –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ")
        print("   ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Å—Å—ã–ª–∫–∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã –∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ")
        print("   ‚Ä¢ –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ–∑–∂–µ")
    else:
        print("\n‚ùå –ü–†–û–ò–ó–û–®–õ–ê –û–®–ò–ë–ö–ê –ü–†–ò –î–û–ë–ê–í–õ–ï–ù–ò–ò –ò–°–¢–û–ß–ù–ò–ö–û–í")

if __name__ == "__main__":
    main()
