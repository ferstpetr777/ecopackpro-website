#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö HTML –æ—à–∏–±–æ–∫ –≤ —Å—Ç–∞—Ç—å–µ 7942
"""

import mysql.connector
import re

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
DB_CONFIG = {
    'host': 'localhost',
    'user': 'm1shqamai2_worp6',
    'password': '9nUQkM*Q2cnvy379',
    'database': 'm1shqamai2_worp6',
    'charset': 'utf8mb4'
}

def fix_all_html_errors(html):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ HTML –æ—à–∏–±–∫–∏"""
    
    print("=" * 80)
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• HTML –û–®–ò–ë–û–ö –í –°–¢–ê–¢–¨–ï 7942")
    print("=" * 80)
    
    original_html = html
    fixes_applied = []
    
    # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–∏—Å–±–∞–ª–∞–Ω—Å —Ç–µ–≥–∞ p (129 vs 128)
    print("\n1. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–ò–°–ë–ê–õ–ê–ù–°–ê –¢–ï–ì–ê P:")
    open_p = len(re.findall(r'<p[^>]*>', html))
    close_p = len(re.findall(r'</p>', html))
    
    if open_p > close_p:
        missing_p = open_p - close_p
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ </p> —Ç–µ–≥–∏
        for _ in range(missing_p):
            html += '</p>'
        fixes_applied.append(f"–î–æ–±–∞–≤–ª–µ–Ω–æ {missing_p} –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö </p> —Ç–µ–≥–æ–≤")
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {missing_p} –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö </p> —Ç–µ–≥–æ–≤")
    else:
        print("‚úÖ –¢–µ–≥–∏ p —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã")
    
    # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–∏—Å–±–∞–ª–∞–Ω—Å —Ç–µ–≥–∞ th (46 vs 36)
    print("\n2. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–ò–°–ë–ê–õ–ê–ù–°–ê –¢–ï–ì–ê TH:")
    open_th = len(re.findall(r'<th[^>]*>', html))
    close_th = len(re.findall(r'</th>', html))
    
    if open_th > close_th:
        missing_th = open_th - close_th
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ <th> –±–µ–∑ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Ç–µ–≥–æ–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ–º </th>
        th_positions = []
        for match in re.finditer(r'<th[^>]*>', html):
            th_positions.append(match.end())
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ </th> –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–≥–æ
        offset = 0
        for pos in th_positions:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ th
            after_th = html[pos + offset:]
            if not re.match(r'\s*</th>', after_th):
                html = html[:pos + offset] + '</th>' + html[pos + offset:]
                offset += 5  # –¥–ª–∏–Ω–∞ '</th>'
                missing_th -= 1
                if missing_th == 0:
                    break
        
        fixes_applied.append(f"–î–æ–±–∞–≤–ª–µ–Ω–æ {open_th - close_th} –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö </th> —Ç–µ–≥–æ–≤")
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {open_th - close_th} –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö </th> —Ç–µ–≥–æ–≤")
    else:
        print("‚úÖ –¢–µ–≥–∏ th —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã")
    
    # 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
    print("\n3. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–£–°–¢–´–• –ê–¢–†–ò–ë–£–¢–û–í:")
    empty_attrs = re.findall(r'=\s*["\']\s*["\']', html)
    if empty_attrs:
        # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
        html = re.sub(r'\s*=\s*["\']\s*["\']', '', html)
        fixes_applied.append(f"–£–±—Ä–∞–Ω–æ {len(empty_attrs)} –ø—É—Å—Ç—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤")
        print(f"‚úÖ –£–±—Ä–∞–Ω–æ {len(empty_attrs)} –ø—É—Å—Ç—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤")
    else:
        print("‚úÖ –ü—É—Å—Ç—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å div –≤ p
    print("\n4. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û–ô –í–õ–û–ñ–ï–ù–ù–û–°–¢–ò:")
    # –ò—â–µ–º <p><div> –∏ –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ <div>
    nested_issues = re.findall(r'<p[^>]*>\s*<div', html)
    if nested_issues:
        # –£–±–∏—Ä–∞–µ–º <p> –ø–µ—Ä–µ–¥ <div>
        html = re.sub(r'<p([^>]*)>\s*<div', r'<div', html)
        # –£–±–∏—Ä–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ </p> –ø–æ—Å–ª–µ </div>
        html = re.sub(r'</div>\s*</p>', r'</div>', html)
        fixes_applied.append(f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å div –≤ p: {len(nested_issues)} —Å–ª—É—á–∞–µ–≤")
        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å: {len(nested_issues)} —Å–ª—É—á–∞–µ–≤")
    else:
        print("‚úÖ –í–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    
    # 5. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã (—á–∞—Å—Ç–∏—á–Ω–æ)
    print("\n5. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ï–≠–ö–†–ê–ù–ò–†–û–í–ê–ù–ù–´–• –°–ò–ú–í–û–õ–û–í:")
    # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞–∏–±–æ–ª–µ–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    replacements = 0
    
    # –ó–∞–º–µ–Ω—è–µ–º < –∏ > –≤ —Ç–µ–∫—Å—Ç–µ (–Ω–æ –Ω–µ –≤ HTML —Ç–µ–≥–∞—Ö)
    # –≠—Ç–æ —Å–ª–æ–∂–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è, –ø–æ—ç—Ç–æ–º—É –¥–µ–ª–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–º–µ–Ω—ã
    html = re.sub(r'&lt;(?![^>]*>)', '&lt;', html)
    html = re.sub(r'&gt;(?![^>]*>)', '&gt;', html)
    
    # –ó–∞–º–µ–Ω—è–µ–º & –≤ —Ç–µ–∫—Å—Ç–µ
    html = re.sub(r'&(?![a-zA-Z][a-zA-Z0-9]{1,31};)', '&amp;', html)
    
    fixes_applied.append("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–µ—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã")
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–µ—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if html != original_html:
        print(f"\nüìä –ò–ó–ú–ï–ù–ï–ù–ò–Ø:")
        print(f"   –ò—Å—Ö–æ–¥–Ω–∞—è –¥–ª–∏–Ω–∞: {len(original_html)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –ù–æ–≤–∞—è –¥–ª–∏–Ω–∞: {len(html)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –†–∞–∑–Ω–∏—Ü–∞: {len(html) - len(original_html)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        print(f"\n‚úÖ –ü–†–ò–ú–ï–ù–ï–ù–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô: {len(fixes_applied)}")
        for i, fix in enumerate(fixes_applied, 1):
            print(f"   {i}. {fix}")
    else:
        print("\n‚è≠Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
    
    return html, fixes_applied

def main():
    try:
        conn = mysql.connector.connect(**DB_CONFIG)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏
        cursor.execute("SELECT post_content FROM wp_posts WHERE ID = 7942")
        original_content = cursor.fetchone()[0]
        
        print(f"üìÑ –ò—Å—Ö–æ–¥–Ω–∞—è –¥–ª–∏–Ω–∞: {len(original_content)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫
        fixed_content, fixes = fix_all_html_errors(original_content)
        
        # –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("""
            UPDATE wp_posts 
            SET post_content = %s, 
                post_modified = NOW(), 
                post_modified_gmt = NOW() 
            WHERE ID = 7942
        """, (fixed_content,))
        
        conn.commit()
        print("\n‚úÖ –°—Ç–∞—Ç—å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        
        cursor.close()
        conn.close()
        
        print("\n" + "=" * 80)
        print("‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("=" * 80)
        
        return len(fixes) > 0
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == '__main__':
    main()
