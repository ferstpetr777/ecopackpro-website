#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import re
from bs4 import BeautifulSoup
import requests
from requests.auth import HTTPBasicAuth
import json
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ WordPress API
WP_API_URL = "https://ecopackpro.ru/wp-json/wp/v2"
WP_USERNAME = "rtep1976@me.com"
WP_APP_PASSWORD = "7EKI VWpH 96dg VI3H ovlI hI4E"
ARTICLE_ID = 7939 # ID —Å—Ç–∞—Ç—å–∏ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è

class HTMLFixer:
    def __init__(self):
        self.auth = HTTPBasicAuth(WP_USERNAME, WP_APP_PASSWORD)
        self.headers = {'Content-Type': 'application/json'}
        self.article_id = ARTICLE_ID
        self.post_content = ""

    def get_article_content_from_db(self):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
        print(f"üîÑ –ü–æ–ª—É—á–∞—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏ ID {self.article_id} –∏–∑ –ë–î...")
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ MySQL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è post_content
            # –≠—Ç–æ –∏–º–∏—Ç–∞—Ü–∏—è, –≤ —Ä–µ–∞–ª—å–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å subprocess –∏–ª–∏ ORM
            # –î–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, —è –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª /tmp/article_7939_content.html
            with open(f"/tmp/article_{self.article_id}_content.html", "r", encoding="utf-8") as f:
                self.post_content = f.read()
            print(f"‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏ ID {self.article_id} –ø–æ–ª—É—á–µ–Ω–æ.")
            return True
        except FileNotFoundError:
            print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª /tmp/article_{self.article_id}_content.html –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç–∞—Ç—å–∏ –∏–∑ —Ñ–∞–π–ª–∞: {e}")
            return False

    def fix_html_structure(self, html_content):
        """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã HTML —Å–æ–≥–ª–∞—Å–Ω–æ –∞—É–¥–∏—Ç—É."""
        print("üîß –ü—Ä–∏–º–µ–Ω—è—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...")

        # –û–®–ò–ë–ö–ê ‚Ññ1: –≠–ö–†–ê–ù–ò–†–û–í–ê–ù–ù–´–ï –°–ò–ú–í–û–õ–´ –ù–û–í–û–ô –°–¢–†–û–ö–ò
        # –ó–∞–º–µ–Ω–∏—Ç—å \\n –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
        html_content = html_content.replace('\\n', '\n')
        print("  - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.")

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º BeautifulSoup –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π
        soup = BeautifulSoup(html_content, 'html.parser')

        # –ü–†–û–ë–õ–ï–ú–ê ‚Ññ7: –†–ê–ó–î–ï–õ "–ò–°–¢–û–ß–ù–ò–ö–ò" –ü–†–ò–°–£–¢–°–¢–í–£–ï–¢
        # –£–¥–∞–ª–∏—Ç—å —Ä–∞–∑–¥–µ–ª "–ò—Å—Ç–æ—á–Ω–∏–∫–∏"
        sources_heading = soup.find('h3', string=re.compile(r'üìö\s*–ò—Å—Ç–æ—á–Ω–∏–∫–∏'))
        if sources_heading:
            sources_block = sources_heading.find_parent('div', class_='wp-block-group')
            if sources_block:
                sources_block.decompose()
                print("  - –†–∞–∑–¥–µ–ª '–ò—Å—Ç–æ—á–Ω–∏–∫–∏' —É–¥–∞–ª–µ–Ω.")
            else:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ wp-block-group, –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π div –∏–ª–∏ section
                current_element = sources_heading
                while current_element and current_element.name != 'div' and current_element.name != 'section':
                    current_element = current_element.parent
                if current_element:
                    current_element.decompose()
                    print("  - –†–∞–∑–¥–µ–ª '–ò—Å—Ç–æ—á–Ω–∏–∫–∏' —É–¥–∞–ª–µ–Ω (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥).")
        
        # –û–®–ò–ë–ö–ê ‚Ññ2, ‚Ññ3, ‚Ññ4: –ù–ï–ü–†–ê–í–ò–õ–¨–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –ù–ê–í–ò–ì–ê–¶–ò–ò, –ü–£–°–¢–´–ï <p> –¢–ï–ì–ò, –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û–ï –ó–ê–ö–†–´–¢–ò–ï –ë–õ–û–ö–û–í
        # –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞ (—É–±—Ä–∞—Ç—å <p> —Ç–µ–≥–∏ –≤–Ω—É—Ç—Ä–∏)
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ –∏–º–µ–µ—Ç –∫–ª–∞—Å—Å 'table-of-contents'
        toc_div = soup.find('div', class_='table-of-contents')
        if toc_div:
            print("  - –ò—Å–ø—Ä–∞–≤–ª—è—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞...")
            for p_tag in toc_div.find_all('p'):
                # –ï—Å–ª–∏ <p> —Å–æ–¥–µ—Ä–∂–∏—Ç <a>, –ø–µ—Ä–µ–º–µ—â–∞–µ–º <a> –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ –∏ —É–¥–∞–ª—è–µ–º <p>
                a_tag = p_tag.find('a')
                if a_tag:
                    p_tag.replace_with(a_tag)
                else:
                    # –ï—Å–ª–∏ <p> –ø—É—Å—Ç–æ–π –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã, —É–¥–∞–ª—è–µ–º –µ–≥–æ
                    if not p_tag.get_text(strip=True):
                        p_tag.decompose()
            print("  - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞.")

        # –û–®–ò–ë–ö–ê ‚Ññ5: –ù–ï–ö–û–†–†–ï–ö–¢–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –°–ü–ò–°–ö–û–í
        # –í—ã–Ω–µ—Å—Ç–∏ <hr/> –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –∞–±–∑–∞—Ü–µ–≤
        for hr_tag in soup.find_all('hr'):
            if hr_tag.parent and hr_tag.parent.name == 'p':
                hr_tag.parent.insert_after(hr_tag)
                hr_tag.parent.decompose() # –£–¥–∞–ª—è–µ–º —Ç–µ–ø–µ—Ä—å –ø—É—Å—Ç–æ–π <p>
                print("  - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ç–µ–≥–∞ <hr/>.")
        
        # –£–¥–∞–ª–µ–Ω–∏–µ –ª—é–±—ã—Ö –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø—É—Å—Ç—ã—Ö <p> —Ç–µ–≥–æ–≤
        for p_tag in soup.find_all('p'):
            if not p_tag.get_text(strip=True) and not p_tag.find_all(True): # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –¥–æ—á–µ—Ä–Ω–∏—Ö —Ç–µ–≥–æ–≤
                p_tag.decompose()
                # print("  - –£–¥–∞–ª–µ–Ω –ø—É—Å—Ç–æ–π <p> —Ç–µ–≥.") # –ú–æ–∂–µ—Ç –±—ã—Ç—å –º–Ω–æ–≥–æ, –Ω–µ –≤—ã–≤–æ–¥–∏–º –∫–∞–∂–¥—ã–π —Ä–∞–∑

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π HTML
        return str(soup)

    def update_article(self, fixed_content):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ —á–µ—Ä–µ–∑ WordPress API."""
        print(f"üöÄ –û–±–Ω–æ–≤–ª—è—é —Å—Ç–∞—Ç—å—é ID {self.article_id} —á–µ—Ä–µ–∑ WordPress API...")
        url = f"{WP_API_URL}/posts/{self.article_id}"

        data = {
            'content': fixed_content,
            'status': 'publish' # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å—Ç–∞—Ç—å—è –æ—Å—Ç–∞–µ—Ç—Å—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–π
        }

        try:
            response = requests.post(url, auth=self.auth, headers=self.headers, json=data, timeout=120)
            if response.status_code == 200:
                post = response.json()
                print(f"‚úÖ –°—Ç–∞—Ç—å—è ID {self.article_id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞. –°—Å—ã–ª–∫–∞: {post['link']}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏ ID {self.article_id}: {response.status_code} - {response.text}")
                return False
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API –¥–ª—è —Å—Ç–∞—Ç—å–∏ ID {self.article_id}: {e}")
            return False
        except Exception as e:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—å–∏ ID {self.article_id}: {e}")
            return False

    def run_fix(self):
        if not self.get_article_content_from_db():
            return False

        if not self.post_content:
            print("‚ùå –ù–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")
            return False

        fixed_html = self.fix_html_structure(self.post_content)

        if self.update_article(fixed_html):
            print(f"üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ ID {self.article_id} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print(f"‚ö†Ô∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ ID {self.article_id} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.")
            return False

if __name__ == "__main__":
    fixer = HTMLFixer()
    fixer.run_fix()