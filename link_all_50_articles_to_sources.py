#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –í–°–ï–• 50 –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏ –≤ articles.db
"""

import sqlite3
import mysql.connector
import re

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_DB_PATH = '/root/seo_project/SEO_ecopackpro/articles.db'

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL (WordPress)
WP_DB_CONFIG = {
    'host': 'localhost',
    'user': 'm1shqamai2_worp6',
    'password': '9nUQkM*Q2cnvy379',
    'database': 'm1shqamai2_worp6'
}

# –≠—Ç–∞–ª–æ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑ 50 –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
KEYWORDS_LIST = [
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã",
    "–ø–æ—á—Ç–æ–≤—ã–µ –∫–æ—Ä–æ–±–∫–∏",
    "–∑–∏–ø –ø–∞–∫–µ—Ç—ã",
    "zip lock –ø–∞–∫–µ—Ç—ã —Å –±–µ–≥—É–Ω–∫–æ–º",
    "–∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π",
    "–∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø—Ä–æ—Å–ª–æ–π–∫–æ–π",
    "–∫—Ä–∞—Ñ—Ç–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã –Ω–æ–º–µ—Ä–Ω—ã–µ",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —á–µ—Ä–Ω–æ-–±–µ–ª—ã–µ",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —Å –∫–∞—Ä–º–∞–Ω–æ–º",
    "zip lock –ø–∞–∫–µ—Ç—ã –º–∞—Ç–æ–≤—ã–µ",
    "zip lock –ø–∞–∫–µ—Ç—ã –æ–ø—Ç–æ–º",
    "–∫—Ä–∞—Ñ—Ç–æ–≤—ã–µ –∫–æ–Ω–≤–µ—Ä—Ç—ã",
    "–ø—É–∑—ã—Ä—á–∞—Ç—ã–µ –ø–∞–∫–µ—Ç—ã –í–ü–ü",
    "–∫–æ—Ä–æ–±–∫–∏ –¥–ª—è –ø–æ—á—Ç—ã",
    "–∫–æ—Ä–æ–±–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏",
    "—Å–∞–º–æ–∫–ª–µ—è—â–∏–µ—Å—è –∫–∞—Ä–º–∞–Ω—ã",
    "–∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç–Ω–∞—è –ø–ª–æ–º–±–∞",
    "–Ω–∞–∫–ª–µ–π–∫–∞ –ø–ª–æ–º–±–∞ –∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç",
    "–ø–ª–æ–º–±–∏—Ä–∞—Ç–æ—Ä –¥–ª—è –±–æ—á–µ–∫",
    "–Ω–æ–º–µ—Ä–Ω—ã–µ –ø–ª–æ–º–±—ã –Ω–∞–∫–ª–µ–π–∫–∏",
    "zip lock –ø–∞–∫–µ—Ç—ã —Å –±–µ–ª–æ–π –ø–æ–ª–æ—Å–æ–π",
    "–±–µ–ª—ã–µ –∫—Ä–∞—Ñ—Ç –ø–∞–∫–µ—Ç—ã —Å –ø—É–∑—ã—Ä—á–∞—Ç–æ–π –ø–ª—ë–Ω–∫–æ–π",
    "–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ zip lock –ø–∞–∫–µ—Ç—ã",
    "–∫—É–ø–∏—Ç—å –∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —Å –Ω–æ–º–µ—Ä–Ω—ã–º —à—Ç—Ä–∏—Ö-–∫–æ–¥–æ–º",
    "–∑–∞–∫–∞–∑–∞—Ç—å –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã –æ–ø—Ç–æ–º",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —á–µ—Ä–Ω–æ-–±–µ–ª—ã–µ —Å –∫–∞—Ä–º–∞–Ω–æ–º —Ü–µ–Ω–∞",
    "–º–∞—Ç–æ–≤—ã–µ zip lock –ø–∞–∫–µ—Ç—ã —Å –±–µ–≥—É–Ω–∫–æ–º 10√ó15",
    "–∫—É–ø–∏—Ç—å –æ–ø—Ç–æ–º zip lock –ø–∞–∫–µ—Ç—ã –º–∞—Ç–æ–≤—ã–µ 30 –º–∫–º",
    "–∫—Ä–∞—Ñ—Ç –∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π F/3",
    "–ø–æ—á—Ç–æ–≤—ã–µ –∫–æ—Ä–æ–±–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ S 260√ó170√ó80",
    "–ø–æ—á—Ç–æ–≤—ã–µ –∫–æ—Ä–æ–±–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ XL 530√ó360√ó220",
    "–∫—É–ø–∏—Ç—å —Å–∞–º–æ–∫–ª–µ—è—â–∏–µ—Å—è –∫–∞—Ä–º–∞–Ω—ã SD –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
    "–∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç–Ω—ã–µ –Ω–∞–∫–ª–µ–π–∫–∏ –¥–ª—è –≤–æ–¥—è–Ω—ã—Ö —Å—á—ë—Ç—á–∏–∫–æ–≤",
    "–∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç–Ω–∞—è –ø–ª–æ–º–±–∞ —Ü–µ–Ω–∞ –∑–∞ 100 —à—Ç—É–∫",
    "–ø–ª–æ–º–±–∏—Ä–∞—Ç–æ—Ä –¥–ª—è –µ–≤—Ä–æ–±–æ—á–µ–∫ 2 –¥—é–π–º–∞",
    "–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ–ø–ª–æ–º–±–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—á–µ–∫ ¬æ –¥—é–π–º–∞",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —á–µ—Ä–Ω–æ-–±–µ–ª—ã–µ –±–µ–∑ –ª–æ–≥–æ—Ç–∏–ø–∞ –ê4",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –¥–ª—è –æ–¥–µ–∂–¥—ã",
    "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ Ozon",
    "–ø–æ—á—Ç–æ–≤—ã–µ –∫–æ—Ä–æ–±–∫–∏ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –Ω–∞ –∑–∞–∫–∞–∑",
    "–∑–∏–ø –ø–∞–∫–µ—Ç—ã —Å –±–µ–≥—É–Ω–∫–æ–º –∫—É–ø–∏—Ç—å –ú–æ—Å–∫–≤–∞",
    "–º–∞—Ç–æ–≤—ã–µ zip lock –ø–∞–∫–µ—Ç—ã –¥–ª—è —á–∞—è",
    "zip lock –ø–∞–∫–µ—Ç—ã —Å –ø–æ–¥–≤–µ—Å–æ–º",
    "–±–µ–ª—ã–µ –∫—Ä–∞—Ñ—Ç-–ø–∞–∫–µ—Ç—ã —Å –ø—É–∑—ã—Ä—á–∞—Ç–æ–π –ø–ª—ë–Ω–∫–æ–π –æ–ø—Ç–æ–º",
    "–ø–ª–æ—Å–∫–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
    "–ø–∞–∫–µ—Ç—ã –∏–∑ –≤–æ–∑–¥—É—à–Ω–æ-–ø—É–∑—ã—Ä—å–∫–æ–≤–æ–π –ø–ª—ë–Ω–∫–∏ –æ–ø—Ç–æ–º",
    "–∞–Ω—Ç–∏–º–∞–≥–Ω–∏—Ç–Ω—ã–µ –ø–ª–æ–º–±—ã –¥–ª—è –≥–∞–∑–æ–≤—ã—Ö —Å—á—ë—Ç—á–∏–∫–æ–≤",
    "—Å–∞–º–æ–∫–ª–µ—è—â–∏–µ—Å—è –∫–∞—Ä–º–∞–Ω—ã –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –Ω–∞–∫–ª–∞–¥–Ω—ã—Ö"
]

def normalize_keyword(keyword):
    """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞"""
    # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –¥–µ—Ñ–∏—Å—ã –≤ –Ω–∞—á–∞–ª–µ
    keyword = keyword.strip().lstrip('-').strip()
    # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    keyword = keyword.lower()
    return keyword

def get_all_wp_articles():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏–∑ WordPress"""
    conn = mysql.connector.connect(**WP_DB_CONFIG)
    cursor = conn.cursor(dictionary=True)
    
    query = """
    SELECT 
        ID,
        post_title,
        post_name,
        post_date,
        post_modified
    FROM wp_posts
    WHERE post_status = 'publish' 
    AND post_type = 'post'
    AND ID >= 7907
    ORDER BY ID
    """
    
    cursor.execute(query)
    articles = cursor.fetchall()
    
    cursor.close()
    conn.close()
    
    return articles

def get_all_source_articles():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∏—Å—Ö–æ–¥–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏–∑ articles.db"""
    conn = sqlite3.connect(PROJECT_DB_PATH)
    cursor = conn.cursor()
    
    cursor.execute("""
    SELECT id, keyword, title
    FROM articles
    ORDER BY id
    """)
    
    sources = {}
    for row in cursor.fetchall():
        source_id, keyword, title = row
        normalized_keyword = normalize_keyword(keyword)
        sources[normalized_keyword] = source_id
    
    conn.close()
    return sources

def link_all_articles():
    """–°–≤—è–∑—ã–≤–∞–µ—Ç –≤—Å–µ 50 —Å—Ç–∞—Ç–µ–π —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏"""
    print("\n" + "="*120)
    print("üîó –°–í–Ø–ó–´–í–ê–ù–ò–ï –í–°–ï–• 50 –°–¢–ê–¢–ï–ô –° –ò–°–•–û–î–ù–ò–ö–ê–ú–ò".center(120))
    print("="*120 + "\n")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—å–∏ –∏–∑ WordPress
    print("üì• –ó–∞–≥—Ä—É–∂–∞—é —Å—Ç–∞—Ç—å–∏ –∏–∑ WordPress...")
    wp_articles = get_all_wp_articles()
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(wp_articles)} —Å—Ç–∞—Ç–µ–π –∏–∑ WordPress\n")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω–∏–∫–∏
    print("üì• –ó–∞–≥—Ä—É–∂–∞—é –∏—Å—Ö–æ–¥–Ω–∏–∫–∏ –∏–∑ articles.db...")
    sources = get_all_source_articles()
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(sources)} –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤\n")
    
    # –û—á–∏—â–∞–µ–º –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    print("üóëÔ∏è  –û—á–∏—â–∞—é —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ published_articles...")
    conn = sqlite3.connect(PROJECT_DB_PATH)
    cursor = conn.cursor()
    cursor.execute("DELETE FROM published_articles WHERE wp_post_id >= 7907")
    conn.commit()
    print("‚úÖ –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã\n")
    
    print("="*120)
    print(f"{'‚Ññ':<4} {'WP ID':<7} {'–ò–°–•–û–î–ù–ò–ö':<12} {'–ù–ê–ó–í–ê–ù–ò–ï':<80}")
    print("="*120)
    
    linked_count = 0
    not_found_count = 0
    export_date = '2025-10-12 09:10:00'
    
    for idx, article in enumerate(wp_articles, 1):
        wp_id = article['ID']
        title = article['post_title']
        slug = article['post_name']
        url = f"https://ecopackpro.ru/{slug}/"
        post_date = str(article['post_date'])
        post_modified = str(article['post_modified'])
        
        # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞
        normalized_title = normalize_keyword(title)
        # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–æ—Å–ª–µ –¥–≤–æ–µ—Ç–æ—á–∏—è
        normalized_title = re.sub(r':.*$', '', normalized_title).strip()
        
        # –ò—â–µ–º –ø–æ —ç—Ç–∞–ª–æ–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        source_id = None
        matched_keyword = None
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        for keyword in KEYWORDS_LIST:
            normalized_keyword = normalize_keyword(keyword)
            if normalized_keyword in normalized_title or normalized_title in normalized_keyword:
                if normalized_keyword in sources:
                    source_id = sources[normalized_keyword]
                    matched_keyword = keyword
                    break
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        if not source_id:
            for keyword in KEYWORDS_LIST:
                normalized_keyword = normalize_keyword(keyword)
                # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å–ª–æ–≤–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
                title_words = set(normalized_title.split())
                keyword_words = set(normalized_keyword.split())
                
                # –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã 70% —Å–ª–æ–≤ —Å–æ–≤–ø–∞–¥–∞—é—Ç
                if len(title_words) > 0 and len(keyword_words) > 0:
                    common_words = title_words & keyword_words
                    similarity = len(common_words) / max(len(title_words), len(keyword_words))
                    
                    if similarity >= 0.7:
                        if normalized_keyword in sources:
                            source_id = sources[normalized_keyword]
                            matched_keyword = keyword
                            break
        
        # –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –≤ –ë–î –ø–æ keyword/title –Ω–∞–ø—Ä—è–º—É—é
        if not source_id:
            conn_check = sqlite3.connect(PROJECT_DB_PATH)
            cursor_check = conn_check.cursor()
            
            cursor_check.execute("""
            SELECT id, keyword
            FROM articles
            WHERE LOWER(keyword) = ? OR LOWER(title) = ?
            """, (normalized_title, normalized_title))
            
            result = cursor_check.fetchone()
            if result:
                source_id = result[0]
                matched_keyword = result[1]
            
            conn_check.close()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        cursor.execute("""
        INSERT INTO published_articles 
        (wp_post_id, title, slug, url, post_date, post_modified, export_date, source_article_id, http_status, last_checked)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        """, (wp_id, title, slug, url, post_date, post_modified, export_date, source_id, 200, export_date))
        
        if source_id:
            linked_count += 1
            status_icon = "‚úÖ"
            source_text = f"ID {source_id}"
        else:
            not_found_count += 1
            status_icon = "‚ùå"
            source_text = "–ù–ï –ù–ê–ô–î–ï–ù"
        
        display_title = title[:77] + "..." if len(title) > 80 else title
        print(f"{idx:<4} {wp_id:<7} {status_icon} {source_text:<10} {display_title}")
        
        if matched_keyword and source_id:
            print(f"     üîó –°–≤—è–∑–∞–Ω–æ —Å: '{matched_keyword}'")
    
    conn.commit()
    print("="*120)
    
    print(f"\n‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î: {linked_count + not_found_count} —Å—Ç–∞—Ç–µ–π")
    print(f"‚úÖ –°–≤—è–∑–∞–Ω–æ —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏: {linked_count}")
    print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤: {not_found_count}\n")
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–≤—è–∑–∞–Ω–Ω—ã–µ, –∏—â–µ–º –ø—Ä–∏—á–∏–Ω—É
    if not_found_count > 0:
        print("="*120)
        print("üîç –ê–ù–ê–õ–ò–ó –ù–ï–°–í–Ø–ó–ê–ù–ù–´–• –°–¢–ê–¢–ï–ô".center(120))
        print("="*120 + "\n")
        
        cursor.execute("""
        SELECT wp_post_id, title
        FROM published_articles
        WHERE source_article_id IS NULL
        ORDER BY wp_post_id
        """)
        
        unlinked = cursor.fetchall()
        
        for wp_id, title in unlinked:
            print(f"‚ùå WP ID {wp_id}: {title}")
            normalized = normalize_keyword(title)
            normalized = re.sub(r':.*$', '', normalized).strip()
            print(f"   üîç –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: '{normalized}'")
            
            # –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
            print(f"   üîç –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤...")
            for keyword in KEYWORDS_LIST:
                normalized_keyword = normalize_keyword(keyword)
                if any(word in normalized for word in normalized_keyword.split() if len(word) > 3):
                    print(f"      ‚ö†Ô∏è  –ü–æ—Ö–æ–∂–µ –Ω–∞: '{keyword}'")
            print()
    
    conn.close()
    
    return linked_count, not_found_count

def create_manual_links():
    """–°–æ–∑–¥–∞–µ—Ç —Ä—É—á–Ω—ã–µ —Å–≤—è–∑–∏ –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π"""
    print("="*120)
    print("üîß –°–û–ó–î–ê–ù–ò–ï –†–£–ß–ù–´–• –°–í–Ø–ó–ï–ô –î–õ–Ø –ü–†–û–ë–õ–ï–ú–ù–´–• –°–¢–ê–¢–ï–ô".center(120))
    print("="*120 + "\n")
    
    # –í—Ä—É—á–Ω—É—é —Å–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥ –¥–ª—è —Å—Ç–∞—Ç–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –Ω–∞—à–ª–∏—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    manual_mappings = {
        # WP_ID: keyword_from_list
        7911: "–∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π",
        7912: "–∫–æ–Ω–≤–µ—Ä—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø—Ä–æ—Å–ª–æ–π–∫–æ–π",
        7913: "–∫—Ä–∞—Ñ—Ç–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã —Å –≤–æ–∑–¥—É—à–Ω–æ–π –ø–æ–¥—É—à–∫–æ–π",
        7921: "–ø—É–∑—ã—Ä—á–∞—Ç—ã–µ –ø–∞–∫–µ—Ç—ã –í–ü–ü",
        7923: "–∫–æ—Ä–æ–±–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏",
        7945: "–∫—É—Ä—å–µ—Ä—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã —á–µ—Ä–Ω–æ-–±–µ–ª—ã–µ –±–µ–∑ –ª–æ–≥–æ—Ç–∏–ø–∞ –ê4",
        7949: "–∑–∏–ø –ø–∞–∫–µ—Ç—ã —Å –±–µ–≥—É–Ω–∫–æ–º –∫—É–ø–∏—Ç—å –ú–æ—Å–∫–≤–∞",
    }
    
    conn = sqlite3.connect(PROJECT_DB_PATH)
    cursor = conn.cursor()
    
    updated_count = 0
    
    for wp_id, keyword in manual_mappings.items():
        normalized_keyword = normalize_keyword(keyword)
        
        # –ò—â–µ–º source_id –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
        cursor.execute("""
        SELECT id, keyword
        FROM articles
        WHERE LOWER(keyword) = ? OR LOWER(title) = ?
        """, (normalized_keyword, normalized_keyword))
        
        result = cursor.fetchone()
        
        if result:
            source_id, source_keyword = result
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤—è–∑—å
            cursor.execute("""
            UPDATE published_articles
            SET source_article_id = ?
            WHERE wp_post_id = ?
            """, (source_id, wp_id))
            
            if cursor.rowcount > 0:
                updated_count += 1
                print(f"‚úÖ WP ID {wp_id}: —Å–≤—è–∑–∞–Ω–∞ —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–º ID {source_id} ('{source_keyword}')")
        else:
            print(f"‚ùå WP ID {wp_id}: –∏—Å—Ö–æ–¥–Ω–∏–∫ '{keyword}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
    
    conn.commit()
    conn.close()
    
    print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ä—É—á–Ω—ã—Ö —Å–≤—è–∑–µ–π: {updated_count}\n")
    return updated_count

def verify_all_50():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ 50 —Å—Ç–∞—Ç–µ–π —Å–≤—è–∑–∞–Ω—ã"""
    print("="*120)
    print("üìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –í–°–ï 50 –°–¢–ê–¢–ï–ô".center(120))
    print("="*120 + "\n")
    
    conn = sqlite3.connect(PROJECT_DB_PATH)
    cursor = conn.cursor()
    
    cursor.execute("""
    SELECT 
        COUNT(*) as total,
        SUM(CASE WHEN source_article_id IS NOT NULL THEN 1 ELSE 0 END) as linked,
        SUM(CASE WHEN source_article_id IS NULL THEN 1 ELSE 0 END) as unlinked
    FROM published_articles
    WHERE wp_post_id >= 7907
    """)
    
    total, linked, unlinked = cursor.fetchone()
    
    print(f"üìù –í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π –≤ –ë–î: {total}")
    print(f"‚úÖ –°–≤—è–∑–∞–Ω–æ —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏: {linked} ({linked*100//total if total > 0 else 0}%)")
    print(f"‚ùå –ë–µ–∑ —Å–≤—è–∑–∏: {unlinked}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏
    cursor.execute("""
    SELECT 
        pa.wp_post_id,
        pa.title,
        pa.url,
        pa.source_article_id,
        a.keyword as source_keyword
    FROM published_articles pa
    LEFT JOIN articles a ON pa.source_article_id = a.id
    WHERE pa.wp_post_id >= 7907
    ORDER BY pa.wp_post_id
    """)
    
    results = cursor.fetchall()
    
    print("\n" + "="*120)
    print(f"{'‚Ññ':<4} {'WP ID':<7} {'–ò–°–•–û–î–ù–ò–ö':<15} {'–ù–ê–ó–í–ê–ù–ò–ï':<80}")
    print("="*120)
    
    for idx, (wp_id, title, url, source_id, source_keyword) in enumerate(results, 1):
        if source_id:
            status = f"‚úÖ ID {source_id}"
        else:
            status = "‚ùå –ù–ï–¢"
        
        display_title = title[:77] + "..." if len(title) > 80 else title
        print(f"{idx:<4} {wp_id:<7} {status:<15} {display_title}")
    
    print("="*120 + "\n")
    
    conn.close()
    
    return total, linked, unlinked

def main():
    print("\n" + "="*120)
    print("üöÄ –°–í–Ø–ó–´–í–ê–ù–ò–ï –í–°–ï–• 50 –°–¢–ê–¢–ï–ô –° –ò–°–•–û–î–ù–ò–ö–ê–ú–ò - –°–¢–ê–†–¢".center(120))
    print("="*120)
    
    # –ü–µ—Ä–≤—ã–π –ø—Ä–æ—Ö–æ–¥ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ
    linked, not_found = link_all_articles()
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–≤—è–∑–∞–Ω–Ω—ã–µ - —Å–æ–∑–¥–∞–µ–º —Ä—É—á–Ω—ã–µ —Å–≤—è–∑–∏
    if not_found > 0:
        print(f"\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {not_found} –Ω–µ—Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π. –°–æ–∑–¥–∞—é —Ä—É—á–Ω—ã–µ —Å–≤—è–∑–∏...\n")
        manual_linked = create_manual_links()
        linked += manual_linked
        not_found -= manual_linked
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    total, final_linked, final_unlinked = verify_all_50()
    
    # –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    print("="*120)
    print("üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢".center(120))
    print("="*120)
    print(f"üìù –í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π: {total}")
    print(f"‚úÖ –°–≤—è–∑–∞–Ω–æ —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏: {final_linked} ({final_linked*100//total if total > 0 else 0}%)")
    print(f"‚ùå –ë–µ–∑ —Å–≤—è–∑–∏: {final_unlinked}")
    
    if final_unlinked == 0 and total == 50:
        print("\n" + "="*120)
        print("üéâ –£–°–ü–ï–•! –í–°–ï 50 –°–¢–ê–¢–ï–ô –°–í–Ø–ó–ê–ù–´ –° –ò–°–•–û–î–ù–ò–ö–ê–ú–ò!".center(120))
        print("="*120)
        return True
    else:
        print("\n" + "="*120)
        print(f"‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï! –ù–µ –≤—Å–µ —Å—Ç–∞—Ç—å–∏ —Å–≤—è–∑–∞–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑.".center(120))
        print("="*120)
        return False

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)

