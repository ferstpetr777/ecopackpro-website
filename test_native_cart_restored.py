#!/usr/bin/env python3
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ WooCommerce cart –º–µ—Ö–∞–Ω–∏–∑–º–∞
–ê–≤—Ç–æ—Ä: EcopackPro Dev Team
–î–∞—Ç–∞: 2025-10-30
"""

import sys
import os
import subprocess
import json
import time
import requests
from datetime import datetime

class Colors:
    GREEN = '\033[92m'
    RED = '\033[91m'
    YELLOW = '\033[93m'
    BLUE = '\033[94m'
    CYAN = '\033[96m'
    MAGENTA = '\033[95m'
    RESET = '\033[0m'
    BOLD = '\033[1m'

class NativeCartTest:
    def __init__(self):
        self.site_path = '/var/www/fastuser/data/www/ecopackpro.ru'
        self.site_url = 'https://ecopackpro.ru'
        self.results = []
        self.start_time = None
        
    def log(self, message, color=Colors.RESET):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ü–≤–µ—Ç–æ–º"""
        print(f"{color}{message}{Colors.RESET}")
    
    def test_problematic_scripts_disabled(self):
        """–¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤"""
        self.log("\nüìã –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤", Colors.BLUE + Colors.BOLD)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ cart-counter-fix.js –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω
        counter_fix_disabled = not os.path.exists(f'{self.site_path}/wp-content/themes/Impreza/cart-counter-fix.js')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ footer.php –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç setInterval(5000)
        try:
            with open(f'{self.site_path}/wp-content/plugins/us-core/templates/footer.php', 'r') as f:
                footer_content = f.read()
                footer_fixed = 'setInterval' not in footer_content or 'DISABLED' in footer_content or 'Native Cart' in footer_content
        except:
            footer_fixed = False
        
        self.log(f"  {'‚úÖ' if counter_fix_disabled else '‚ùå'} cart-counter-fix.js –æ—Ç–∫–ª—é—á–µ–Ω", 
                Colors.GREEN if counter_fix_disabled else Colors.RED)
        self.log(f"  {'‚úÖ' if footer_fixed else '‚ùå'} footer.php –∏—Å–ø—Ä–∞–≤–ª–µ–Ω", 
                Colors.GREEN if footer_fixed else Colors.RED)
        
        if counter_fix_disabled and footer_fixed:
            self.results.append({
                'test': 'Problematic scripts disabled',
                'status': 'PASS',
                'message': '–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã'
            })
            self.log("\n‚úÖ PASS: –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã —É–¥–∞–ª–µ–Ω—ã", Colors.GREEN)
            return True
        else:
            self.results.append({
                'test': 'Problematic scripts disabled',
                'status': 'FAIL',
                'message': '–ù–µ –≤—Å–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã'
            })
            self.log("\n‚ùå FAIL: –ï—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã", Colors.RED)
            return False
    
    def test_native_cart_plugin_loaded(self):
        """–¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ restore-native-woocommerce-cart.php"""
        self.log("\nüìã –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ mu-plugin", Colors.BLUE + Colors.BOLD)
        
        plugin_path = f'{self.site_path}/wp-content/mu-plugins/restore-native-woocommerce-cart.php'
        
        if not os.path.exists(plugin_path):
            self.results.append({
                'test': 'Native cart plugin exists',
                'status': 'FAIL',
                'message': '–§–∞–π–ª mu-plugin –Ω–µ –Ω–∞–π–¥–µ–Ω'
            })
            self.log("‚ùå FAIL: mu-plugin –Ω–µ –Ω–∞–π–¥–µ–Ω", Colors.RED)
            return False
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
        result = subprocess.run(
            ['php', '-l', plugin_path],
            capture_output=True,
            text=True
        )
        
        if result.returncode == 0:
            self.results.append({
                'test': 'Native cart plugin loaded',
                'status': 'PASS',
                'message': 'mu-plugin –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω'
            })
            self.log("‚úÖ PASS: mu-plugin –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω", Colors.GREEN)
            return True
        else:
            self.results.append({
                'test': 'Native cart plugin syntax',
                'status': 'FAIL',
                'message': f'–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: {result.stderr}'
            })
            self.log(f"‚ùå FAIL: {result.stderr}", Colors.RED)
            return False
    
    def test_woocommerce_ajax_enabled(self):
        """–¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ AJAX add-to-cart WooCommerce"""
        self.log("\nüìã –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ AJAX add-to-cart", Colors.BLUE + Colors.BOLD)
        
        try:
            result = subprocess.run(
                ['sudo', '-u', 'www-data', 'wp', 'option', 'get', 
                 'woocommerce_enable_ajax_add_to_cart', 
                 '--path=' + self.site_path],
                capture_output=True,
                text=True,
                cwd=self.site_path
            )
            
            ajax_enabled = 'yes' in result.stdout.lower()
            
            if ajax_enabled:
                self.results.append({
                    'test': 'AJAX add-to-cart enabled',
                    'status': 'PASS',
                    'message': 'AJAX add-to-cart –≤–∫–ª—é—á–µ–Ω –≤ WooCommerce'
                })
                self.log("‚úÖ PASS: AJAX add-to-cart –≤–∫–ª—é—á–µ–Ω", Colors.GREEN)
                return True
            else:
                self.results.append({
                    'test': 'AJAX add-to-cart enabled',
                    'status': 'FAIL',
                    'message': 'AJAX add-to-cart –í–´–ö–õ–Æ–ß–ï–ù!'
                })
                self.log("‚ùå FAIL: AJAX add-to-cart –≤—ã–∫–ª—é—á–µ–Ω", Colors.RED)
                return False
        except Exception as e:
            self.results.append({
                'test': 'AJAX add-to-cart enabled',
                'status': 'FAIL',
                'message': f'–û—à–∏–±–∫–∞: {str(e)}'
            })
            self.log(f"‚ùå FAIL: {str(e)}", Colors.RED)
            return False
    
    def test_cart_fragments_script_loaded(self):
        """–¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ cart-fragments.js"""
        self.log("\nüìã –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ cart-fragments.js", Colors.BLUE + Colors.BOLD)
        
        try:
            response = requests.get(self.site_url, timeout=10, verify=False)
            html = response.text
            
            has_cart_fragments = 'cart-fragments' in html
            has_wc_ajax_url = 'wc-ajax' in html
            has_fragments_params = 'wc_cart_fragments_params' in html
            
            all_present = has_cart_fragments and has_wc_ajax_url
            
            self.log(f"  {'‚úÖ' if has_cart_fragments else '‚ùå'} cart-fragments.js –ø–æ–¥–∫–ª—é—á–µ–Ω", 
                    Colors.GREEN if has_cart_fragments else Colors.RED)
            self.log(f"  {'‚úÖ' if has_wc_ajax_url else '‚ùå'} wc-ajax endpoint –Ω–∞–π–¥–µ–Ω", 
                    Colors.GREEN if has_wc_ajax_url else Colors.RED)
            self.log(f"  {'‚úÖ' if has_fragments_params else '‚ùå'} wc_cart_fragments_params –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç", 
                    Colors.GREEN if has_fragments_params else Colors.RED)
            
            if all_present:
                self.results.append({
                    'test': 'Cart fragments loaded',
                    'status': 'PASS',
                    'message': 'Cart fragments –º–µ—Ö–∞–Ω–∏–∑–º –∞–∫—Ç–∏–≤–µ–Ω'
                })
                self.log("\n‚úÖ PASS: Cart fragments —Ä–∞–±–æ—Ç–∞–µ—Ç", Colors.GREEN)
                return True
            else:
                self.results.append({
                    'test': 'Cart fragments loaded',
                    'status': 'FAIL',
                    'message': 'Cart fragments –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω'
                })
                self.log("\n‚ùå FAIL: –ü—Ä–æ–±–ª–µ–º—ã —Å cart fragments", Colors.RED)
                return False
        except Exception as e:
            self.results.append({
                'test': 'Cart fragments loaded',
                'status': 'FAIL',
                'message': f'–û—à–∏–±–∫–∞: {str(e)}'
            })
            self.log(f"‚ùå FAIL: {str(e)}", Colors.RED)
            return False
    
    def test_native_script_in_page(self):
        """–¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
        self.log("\nüìã –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞", Colors.BLUE + Colors.BOLD)
        
        try:
            response = requests.get(self.site_url, timeout=10, verify=False)
            html = response.text
            
            has_native_script = '[EcopackPro Native Cart]' in html
            no_problematic_script = 'setInterval' not in html or has_native_script
            
            self.log(f"  {'‚úÖ' if has_native_script else '‚ùå'} –ù–∞—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω", 
                    Colors.GREEN if has_native_script else Colors.RED)
            self.log(f"  {'‚úÖ' if no_problematic_script else '‚ùå'} –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö setInterval –Ω–µ—Ç", 
                    Colors.GREEN if no_problematic_script else Colors.YELLOW)
            
            if has_native_script:
                self.results.append({
                    'test': 'Native script loaded',
                    'status': 'PASS',
                    'message': '–ù–∞—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ'
                })
                self.log("\n‚úÖ PASS: –ù–∞—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç", Colors.GREEN)
                return True
            else:
                self.results.append({
                    'test': 'Native script loaded',
                    'status': 'FAIL',
                    'message': '–ù–∞—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ'
                })
                self.log("\n‚ùå FAIL: –ù–∞—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", Colors.RED)
                return False
        except Exception as e:
            self.results.append({
                'test': 'Native script loaded',
                'status': 'FAIL',
                'message': f'–û—à–∏–±–∫–∞: {str(e)}'
            })
            self.log(f"‚ùå FAIL: {str(e)}", Colors.RED)
            return False
    
    def test_woocommerce_session(self):
        """–¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–π WooCommerce"""
        self.log("\nüìã –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ WooCommerce —Å–µ—Å—Å–∏–π", Colors.BLUE + Colors.BOLD)
        
        try:
            # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–∫–∏
            session = requests.Session()
            response = session.get(self.site_url, verify=False)
            
            cookies = session.cookies.get_dict()
            
            # –ò—â–µ–º –∫—É–∫–∏ WooCommerce
            wc_cookies = [k for k in cookies.keys() if 'woocommerce' in k.lower() or 'wp_woocommerce' in k.lower()]
            
            self.log(f"  –ù–∞–π–¥–µ–Ω–æ WooCommerce cookies: {len(wc_cookies)}", Colors.CYAN)
            for cookie_name in wc_cookies:
                self.log(f"    ‚Ä¢ {cookie_name}", Colors.CYAN)
            
            if len(wc_cookies) > 0 or 'yes' in response.text:  # –ú–æ–≥—É—Ç –±—ã—Ç—å –∏ –±–µ–∑ —Ç–æ–≤–∞—Ä–æ–≤
                self.results.append({
                    'test': 'WooCommerce session',
                    'status': 'PASS',
                    'message': f'–°–µ—Å—Å–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç ({len(wc_cookies)} cookies)'
                })
                self.log("\n‚úÖ PASS: –°–µ—Å—Å–∏–∏ WooCommerce —Ä–∞–±–æ—Ç–∞—é—Ç", Colors.GREEN)
                return True
            else:
                self.results.append({
                    'test': 'WooCommerce session',
                    'status': 'WARN',
                    'message': 'WC cookies –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞)'
                })
                self.log("\n‚ö†Ô∏è  WARN: WC cookies –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–Ω–æ—Ä–º–∞ –¥–ª—è –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω—ã)", Colors.YELLOW)
                return True
        except Exception as e:
            self.results.append({
                'test': 'WooCommerce session',
                'status': 'FAIL',
                'message': f'–û—à–∏–±–∫–∞: {str(e)}'
            })
            self.log(f"‚ùå FAIL: {str(e)}", Colors.RED)
            return False
    
    def generate_report(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞"""
        self.log("\n" + "="*80, Colors.BOLD)
        self.log("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢: NATIVE WOOCOMMERCE CART", Colors.BOLD + Colors.BLUE)
        self.log("="*80, Colors.BOLD)
        
        total = len(self.results)
        passed = sum(1 for r in self.results if r['status'] == 'PASS')
        failed = sum(1 for r in self.results if r['status'] == 'FAIL')
        warned = sum(1 for r in self.results if r['status'] == 'WARN')
        
        self.log(f"\n–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {total}")
        self.log(f"–£—Å–ø–µ—à–Ω–æ: {passed}", Colors.GREEN)
        if warned > 0:
            self.log(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {warned}", Colors.YELLOW)
        if failed > 0:
            self.log(f"–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {failed}", Colors.RED)
        
        self.log("\n–î–µ—Ç–∞–ª–∏:", Colors.BOLD)
        for result in self.results:
            status_color = Colors.GREEN if result['status'] == 'PASS' else \
                          Colors.YELLOW if result['status'] == 'WARN' else Colors.RED
            
            self.log(f"\n  [{result['status']}] {result['test']}", status_color)
            self.log(f"    ‚îî‚îÄ {result['message']}")
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ JSON
        report_file = f'{self.site_path}/native_cart_test_report_{datetime.now().strftime("%Y%m%d_%H%M%S")}.json'
        with open(report_file, 'w', encoding='utf-8') as f:
            json.dump({
                'timestamp': datetime.now().isoformat(),
                'duration_seconds': time.time() - self.start_time,
                'total_tests': total,
                'passed': passed,
                'failed': failed,
                'warned': warned,
                'results': self.results
            }, f, indent=2, ensure_ascii=False)
        
        self.log(f"\nüìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {report_file}", Colors.BLUE)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        self.log("\n" + "="*80, Colors.BOLD)
        self.log("üß™ –†–£–ß–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï", Colors.MAGENTA + Colors.BOLD)
        self.log("="*80, Colors.BOLD)
        
        self.log("\n1. –û—Ç–∫—Ä–æ–π—Ç–µ https://ecopackpro.ru –Ω–∞ DESKTOP", Colors.CYAN)
        self.log("2. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å (F12)", Colors.CYAN)
        self.log("3. –ù–∞–π–¥–∏—Ç–µ —Ç–æ–≤–∞—Ä –∏ –Ω–∞–∂–º–∏—Ç–µ '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É'", Colors.CYAN)
        self.log("\n4. –ü–†–û–í–ï–†–¨–¢–ï –ö–û–ù–°–û–õ–¨ - –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è:", Colors.CYAN)
        self.log("   [EcopackPro Native Cart] Product added, fragments: {...}", Colors.YELLOW)
        self.log("   [EcopackPro Native Cart] New cart count: 1", Colors.YELLOW)
        self.log("\n5. Badge –¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–∏—Ç—å—Å—è –°–†–ê–ó–£ (–Ω–µ —á–µ—Ä–µ–∑ 3-5 —Å–µ–∫—É–Ω–¥)!", Colors.CYAN)
        
        self.log("\n" + "-"*80, Colors.BOLD)
        self.log("\n6. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞ –ú–û–ë–ò–õ–¨–ù–û–ú —Ç–µ–ª–µ—Ñ–æ–Ω–µ", Colors.CYAN)
        self.log("7. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É", Colors.CYAN)
        self.log("8. Badge –≤ –ù–ò–ñ–ù–ï–ô –ù–ê–í–ò–ì–ê–¶–ò–ò –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –°–†–ê–ó–£!", Colors.CYAN)
        self.log("9. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É - badge –ù–ï –¥–æ–ª–∂–µ–Ω –∏—Å—á–µ–∑–∞—Ç—å!", Colors.CYAN)
        
        # –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
        if failed == 0:
            self.log("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!", Colors.GREEN + Colors.BOLD)
            self.log("\n–ù–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º WooCommerce –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù ‚úÖ", Colors.GREEN)
            self.log("–¢–µ–ø–µ—Ä—å –∫–æ—Ä–∑–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –°–†–ê–ó–£ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫!", Colors.GREEN)
            return 0
        else:
            self.log(f"\n‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´: {failed} —Ç–µ—Å—Ç(–æ–≤) –ø—Ä–æ–≤–∞–ª–µ–Ω–æ", Colors.RED + Colors.BOLD)
            return 1
    
    def run_all_tests(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
        self.start_time = time.time()
        
        self.log("="*80, Colors.BOLD)
        self.log("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–ê–¢–ò–í–ù–û–ì–û –ú–ï–•–ê–ù–ò–ó–ú–ê WOOCOMMERCE", Colors.BOLD + Colors.BLUE)
        self.log("="*80, Colors.BOLD)
        self.log(f"–î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        self.log(f"–°–∞–π—Ç: {self.site_url}")
        
        # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
        self.test_problematic_scripts_disabled()
        self.test_native_cart_plugin_loaded()
        self.test_woocommerce_ajax_enabled()
        self.test_cart_fragments_script_loaded()
        self.test_native_script_in_page()
        self.test_woocommerce_session()
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
        return self.generate_report()

if __name__ == '__main__':
    # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
    import urllib3
    urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
    
    runner = NativeCartTest()
    exit_code = runner.run_all_tests()
    sys.exit(exit_code)

