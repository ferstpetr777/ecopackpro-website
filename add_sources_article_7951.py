#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
from requests.auth import HTTPBasicAuth
import json
import re
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ WordPress API
WP_API_URL = "https://ecopackpro.ru/wp-json/wp/v2"
WP_USERNAME = "rtep1976@me.com"
WP_APP_PASSWORD = "7EKI VWpH 96dg VI3H ovlI hI4E"

# –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ —Ç–µ–º–µ "Zip lock –ø–∞–∫–µ—Ç—ã —Å –ø–æ–¥–≤–µ—Å–æ–º"
POTENTIAL_SOURCES = [
    {
        'title': '–ì–û–°–¢ –† 51760-2001 - –ü–∞–∫–µ—Ç—ã –∏–∑ –ø–æ–ª–∏–º–µ—Ä–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
        'url': 'https://docs.cntd.ru/document/1200009321'
    },
    {
        'title': '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —É–ø–∞–∫–æ–≤–∫–µ –ø–∏—â–µ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤',
        'url': 'https://www.consultant.ru/document/cons_doc_LAW_19109/'
    },
    {
        'title': '–ê—Å—Å–æ—Ü–∏–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –ø–æ–ª–∏–º–µ—Ä–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–∏',
        'url': 'https://www.unipack.ru/'
    },
    {
        'title': '–≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è —É–ø–∞–∫–æ–≤–∫–∏ - Zip lock —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
        'url': 'https://ru.wikipedia.org/wiki/–ü–æ–ª–∏—ç—Ç–∏–ª–µ–Ω–æ–≤—ã–π_–ø–∞–∫–µ—Ç'
    },
    {
        'title': '–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –ø–∏—â–µ–≤–æ–π —É–ø–∞–∫–æ–≤–∫–∏ - –†–æ—Å–ø–æ—Ç—Ä–µ–±–Ω–∞–¥–∑–æ—Ä',
        'url': 'https://rospotrebnadzor.ru/'
    },
    {
        'title': '–†—ã–Ω–æ–∫ —É–ø–∞–∫–æ–≤–æ—á–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ - –†–æ—Å–ë–∏–∑–Ω–µ—Å–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥',
        'url': 'https://www.rbc.ru/'
    }
]

class ZipLockSourcesAdder:
    def __init__(self):
        self.auth = HTTPBasicAuth(WP_USERNAME, WP_APP_PASSWORD)
        self.headers = {'Content-Type': 'application/json'}
        self.verified_sources = []
    
    def check_url_status(self, url, timeout=15):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL"""
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
            'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
        }
        
        try:
            print(f"   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: {url[:70]}...", end=" ")
            
            session = requests.Session()
            response = session.get(
                url, 
                headers=headers, 
                timeout=timeout, 
                allow_redirects=True,
                verify=True
            )
            
            if response.status_code == 200:
                print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
                return True, response.status_code
            else:
                print(f"‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å: {response.status_code}")
                return False, response.status_code
                
        except Exception as e:
            error_msg = str(e)[:50]
            print(f"‚ùå –û—à–∏–±–∫–∞: {error_msg}")
            return False, None
    
    def verify_sources(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
        print("üîç –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –ò–°–¢–û–ß–ù–ò–ö–û–í")
        print("=" * 80)
        
        for i, source in enumerate(POTENTIAL_SOURCES, 1):
            print(f"\n{i}. {source['title']}")
            
            is_valid, status = self.check_url_status(source['url'])
            
            if is_valid:
                self.verified_sources.append(source)
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            time.sleep(2)
        
        print(f"\n‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(POTENTIAL_SOURCES)}")
        print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(self.verified_sources)}")
        
        return self.verified_sources
    
    def get_post(self, post_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ —á–µ—Ä–µ–∑ API"""
        url = f"{WP_API_URL}/posts/{post_id}"
        try:
            response = requests.get(url, auth=self.auth, headers=self.headers)
            if response.status_code == 200:
                return response.json()
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞ {post_id}: {response.status_code}")
                return None
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞ {post_id}: {e}")
            return None
    
    def find_insertion_point(self, content):
        """–ü–æ–∏—Å–∫ –º–µ—Å—Ç–∞ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
        # –ò—â–µ–º –±–ª–æ–∫ "–ú—ã –ø–æ–º–æ–∂–µ–º" –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –±–ª–æ–∫ –ø–µ—Ä–µ–¥ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
        markers = [
            '–ú—ã –ø–æ–º–æ–∂–µ–º:',
            '–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:',
            '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:',
            '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'
        ]
        
        for marker in markers:
            if marker in content:
                pos = content.find(marker)
                if marker == '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ':
                    # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã, –≤—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ –Ω–∏–º–∏
                    return pos
                else:
                    # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –¥—Ä—É–≥–æ–π –±–ª–æ–∫, –∏—â–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ—Å–ª–µ –Ω–µ–≥–æ
                    after_marker = content[pos:]
                    contact_pos = after_marker.find('–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
                    if contact_pos != -1:
                        return pos + contact_pos
        
        return None
    
    def create_sources_section(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
        if not self.verified_sources:
            return ""
        
        sources_html = """
<hr />

<h2>üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏</h2>

<p>–ü—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å —Å–ª–µ–¥—É—é—â–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:</p>

<ul>
"""
        
        for source in self.verified_sources:
            sources_html += f'<li><a href="{source["url"]}" target="_blank" rel="noopener noreferrer nofollow">{source["title"]}</a></li>\n'
        
        sources_html += """</ul>

<p><em>–í—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã –Ω–∞ –º–æ–º–µ–Ω—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.</em></p>

<hr />
"""
        
        return sources_html
    
    def update_post(self, post_id, content):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ —á–µ—Ä–µ–∑ API"""
        url = f"{WP_API_URL}/posts/{post_id}"
        
        data = {
            'content': content
        }
        
        try:
            response = requests.post(url, auth=self.auth, headers=self.headers, json=data)
            if response.status_code == 200:
                return response.json()
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞ {post_id}: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {response.text}")
                return None
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞ {post_id}: {e}")
            return None
    
    def add_sources_to_article(self, post_id):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ —Å—Ç–∞—Ç—å—é"""
        print(f"\nüìù –î–û–ë–ê–í–õ–ï–ù–ò–ï –ò–°–¢–û–ß–ù–ò–ö–û–í –í –°–¢–ê–¢–¨–Æ ID {post_id}")
        print("=" * 80)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        verified = self.verify_sources()
        
        if not verified:
            print("\n‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è!")
            return False
        
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(verified)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç
        print("\n1Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ —á–µ—Ä–µ–∑ API...")
        post = self.get_post(post_id)
        
        if not post:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç")
            return False
        
        print(f"‚úÖ –ü–æ—Å—Ç –ø–æ–ª—É—á–µ–Ω: {post['title']['rendered']}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        content = post['content']['rendered']
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç ({len(content)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
        # –ò—â–µ–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
        print("2Ô∏è‚É£ –ü–æ–∏—Å–∫ –º–µ—Å—Ç–∞ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...")
        insertion_point = self.find_insertion_point(content)
        
        if insertion_point is None:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤!")
            return False
        
        print("‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏")
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–¥–µ–ª –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        print("3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...")
        sources_section = self.create_sources_section()
        
        if not sources_section:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–∞–∑–¥–µ–ª –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
            return False
        
        print("‚úÖ –†–∞–∑–¥–µ–ª –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å–æ–∑–¥–∞–Ω")
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ –∫–æ–Ω—Ç–µ–Ω—Ç
        print("4Ô∏è‚É£ –í—Å—Ç–∞–≤–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ –∫–æ–Ω—Ç–µ–Ω—Ç...")
        new_content = (
            content[:insertion_point] + 
            sources_section + 
            content[insertion_point:]
        )
        
        print("‚úÖ –†–∞–∑–¥–µ–ª –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤—Å—Ç–∞–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ç–µ–Ω—Ç")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å—Ç —á–µ—Ä–µ–∑ API
        print("5Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ —á–µ—Ä–µ–∑ API...")
        updated_post = self.update_post(post_id, new_content)
        
        if updated_post:
            print("\n" + "=" * 80)
            print("‚úÖ –°–¢–ê–¢–¨–Ø –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù–ê!")
            print("=" * 80)
            print(f"üìä –î–æ–±–∞–≤–ª–µ–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(self.verified_sources)}")
            print(f"üìù –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {len(new_content)} —Å–∏–º–≤–æ–ª–æ–≤ (+{len(new_content) - len(content)} —Å–∏–º–≤–æ–ª–æ–≤)")
            print(f"\nüîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—å—é:")
            print(f"   –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: https://ecopackpro.ru/wp-admin/post.php?post={post_id}&action=edit")
            print(f"   –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä: https://ecopackpro.ru/?p={post_id}&preview=true")
            print(f"\nüìã –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:")
            for i, source in enumerate(self.verified_sources, 1):
                print(f"   {i}. {source['title']}")
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ—Å—Ç —á–µ—Ä–µ–∑ API")
            return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 80)
    print("üìö –î–û–ë–ê–í–õ–ï–ù–ò–ï –ò–°–¢–û–ß–ù–ò–ö–û–í –í –°–¢–ê–¢–¨–Æ 7951")
    print("=" * 80)
    print("–°—Ç–∞—Ç—å—è: Zip lock –ø–∞–∫–µ—Ç—ã —Å –ø–æ–¥–≤–µ—Å–æ–º")
    print("=" * 80)
    
    adder = ZipLockSourcesAdder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ —Å—Ç–∞—Ç—å—é
    success = adder.add_sources_to_article(7951)
    
    if success:
        print("\nüéâ –ó–ê–î–ê–ß–ê –í–´–ü–û–õ–ù–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("\nüí° –†–∞–∑–¥–µ–ª '–ò—Å—Ç–æ—á–Ω–∏–∫–∏' –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å—Ç–∞—Ç—å—é —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏")
    else:
        print("\n‚ùå –ü–†–û–ò–ó–û–®–õ–ê –û–®–ò–ë–ö–ê –ü–†–ò –î–û–ë–ê–í–õ–ï–ù–ò–ò –ò–°–¢–û–ß–ù–ò–ö–û–í")

if __name__ == "__main__":
    main()
