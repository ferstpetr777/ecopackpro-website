#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –≤—Å–µ–º 50 –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–º —Å—Ç–∞—Ç—å—è–º
"""

import mysql.connector
import requests
from bs4 import BeautifulSoup
import re
from datetime import datetime
import xml.etree.ElementTree as ET

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL (WordPress)
WP_DB_CONFIG = {
    'host': 'localhost',
    'user': 'm1shqamai2_worp6',
    'password': '9nUQkM*Q2cnvy379',
    'database': 'm1shqamai2_worp6'
}

BASE_URL = 'https://ecopackpro.ru'
SITEMAP_URL = f'{BASE_URL}/post-sitemap.xml'

def count_words_in_html(html_content):
    """–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ HTML"""
    soup = BeautifulSoup(html_content, 'html.parser')
    for script in soup(["script", "style"]):
        script.decompose()
    text = soup.get_text()
    words = re.findall(r'\b[–∞-—è—ë–ê-–Ø–Åa-zA-Z]+\b', text)
    return len(words)

def get_all_published_articles():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ 50 –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π"""
    conn = mysql.connector.connect(**WP_DB_CONFIG)
    cursor = conn.cursor(dictionary=True)
    
    query = """
    SELECT 
        ID,
        post_title,
        post_name,
        post_content,
        post_date,
        post_modified,
        CHAR_LENGTH(post_content) as content_length
    FROM wp_posts
    WHERE post_status = 'publish' 
    AND post_type = 'post'
    AND ID >= 7907
    ORDER BY ID
    """
    
    cursor.execute(query)
    articles = cursor.fetchall()
    
    cursor.close()
    conn.close()
    
    return articles

def check_url_status(url):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç HTTP —Å—Ç–∞—Ç—É—Å"""
    try:
        response = requests.get(url, timeout=10, allow_redirects=True)
        return response.status_code
    except:
        return None

def get_sitemap_urls():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ URL –∏–∑ sitemap"""
    try:
        response = requests.get(SITEMAP_URL, timeout=30)
        root = ET.fromstring(response.content)
        ns = {'sm': 'http://www.sitemaps.org/schemas/sitemap/0.9'}
        
        urls = set()
        for url_elem in root.findall('.//sm:url', ns):
            loc = url_elem.find('sm:loc', ns)
            if loc is not None:
                urls.add(loc.text.rstrip('/'))
        
        return urls
    except:
        return set()

def main():
    print("\n" + "="*120)
    print("üìä –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –ü–û –í–°–ï–ú 50 –û–ü–£–ë–õ–ò–ö–û–í–ê–ù–ù–´–ú –°–¢–ê–¢–¨–Ø–ú".center(120))
    print("="*120 + "\n")
    
    start_time = datetime.now()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏
    print("üì• –ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ –∏–∑ WordPress...")
    articles = get_all_published_articles()
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(articles)} —Å—Ç–∞—Ç–µ–π\n")
    
    # –ü–æ–ª—É—á–∞–µ–º sitemap
    print("üó∫Ô∏è  –ó–∞–≥—Ä—É–∂–∞—é sitemap...")
    sitemap_urls = get_sitemap_urls()
    print(f"‚úÖ –í sitemap {len(sitemap_urls)} URL\n")
    
    print("="*120)
    print(f"{'‚Ññ':<4} {'ID':<6} {'HTTP':<6} {'SITEMAP':<9} {'–°–õ–û–í':<6} {'–ù–ê–ó–í–ê–ù–ò–ï':<60}")
    print("="*120)
    
    results = []
    http_200_count = 0
    in_sitemap_count = 0
    total_words = 0
    
    for idx, article in enumerate(articles, 1):
        wp_id = article['ID']
        title = article['post_title']
        slug = article['post_name']
        url = f"{BASE_URL}/{slug}/"
        content = article['post_content']
        content_length = article['content_length']
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–ª–æ–≤–∞
        word_count = count_words_in_html(content)
        total_words += word_count
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP —Å—Ç–∞—Ç—É—Å
        http_status = check_url_status(url)
        if http_status == 200:
            http_200_count += 1
            http_icon = "‚úÖ"
        else:
            http_icon = "‚ùå"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º sitemap
        url_normalized = url.rstrip('/')
        in_sitemap = url_normalized in sitemap_urls
        if in_sitemap:
            in_sitemap_count += 1
            sitemap_icon = "‚úÖ"
        else:
            sitemap_icon = "‚ùå"
        
        display_title = title[:57] + "..." if len(title) > 60 else title
        
        print(f"{idx:<4} {wp_id:<6} {http_icon} {http_status or 'ERR':<4} {sitemap_icon} {'–î–∞' if in_sitemap else '–ù–µ—Ç':<6} {word_count:<6} {display_title}")
        
        results.append({
            'id': wp_id,
            'title': title,
            'url': url,
            'http_status': http_status,
            'in_sitemap': in_sitemap,
            'word_count': word_count,
            'content_length': content_length
        })
    
    print("="*120)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "="*120)
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê".center(120))
    print("="*120)
    print(f"üìù –í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
    print(f"‚úÖ HTTP 200: {http_200_count} ({http_200_count*100//len(articles)}%)")
    print(f"‚úÖ –í sitemap: {in_sitemap_count} ({in_sitemap_count*100//len(articles)}%)")
    print(f"üìù –í—Å–µ–≥–æ —Å–ª–æ–≤: {total_words:,}")
    print(f"üìä –°—Ä–µ–¥–Ω–µ–µ —Å–ª–æ–≤/—Å—Ç–∞—Ç—å—è: {total_words//len(articles)}")
    print(f"‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {datetime.now() - start_time}")
    print("="*120)
    
    # –¢–æ–ø-5 —Å–∞–º—ã—Ö –¥–ª–∏–Ω–Ω—ã—Ö
    print("\nüìà –¢–û–ü-5 –°–ê–ú–´–• –î–õ–ò–ù–ù–´–• –°–¢–ê–¢–ï–ô:")
    print("-"*120)
    top_5 = sorted(results, key=lambda x: x['word_count'], reverse=True)[:5]
    for idx, r in enumerate(top_5, 1):
        print(f"{idx}. ID {r['id']}: {r['title'][:70]}")
        print(f"   üìù –°–ª–æ–≤: {r['word_count']}, URL: {r['url']}\n")
    
    # –¢–æ–ø-5 —Å–∞–º—ã—Ö –∫–æ—Ä–æ—Ç–∫–∏—Ö
    print("üìâ –¢–û–ü-5 –°–ê–ú–´–• –ö–û–†–û–¢–ö–ò–• –°–¢–ê–¢–ï–ô:")
    print("-"*120)
    bottom_5 = sorted(results, key=lambda x: x['word_count'])[:5]
    for idx, r in enumerate(bottom_5, 1):
        print(f"{idx}. ID {r['id']}: {r['title'][:70]}")
        print(f"   üìù –°–ª–æ–≤: {r['word_count']}, URL: {r['url']}\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –≤ sitemap
    missing_in_sitemap = [r for r in results if not r['in_sitemap']]
    if missing_in_sitemap:
        print("\n‚ö†Ô∏è  –°–¢–ê–¢–¨–ò, –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–ï –í SITEMAP:")
        print("-"*120)
        for r in missing_in_sitemap:
            print(f"‚ùå ID {r['id']}: {r['title']}")
            print(f"   URL: {r['url']}\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ
    unavailable = [r for r in results if r['http_status'] != 200]
    if unavailable:
        print("\n‚ö†Ô∏è  –ù–ï–î–û–°–¢–£–ü–ù–´–ï –°–¢–ê–¢–¨–ò (–ù–ï HTTP 200):")
        print("-"*120)
        for r in unavailable:
            print(f"‚ùå ID {r['id']}: {r['title']}")
            print(f"   URL: {r['url']}, HTTP: {r['http_status']}\n")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    import json
    report_filename = f'final_50_articles_complete_report_{datetime.now().strftime("%Y%m%d_%H%M%S")}.json'
    with open(report_filename, 'w', encoding='utf-8') as f:
        json.dump(results, f, ensure_ascii=False, indent=4)
    
    print(f"\nüìÑ –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {report_filename}")
    
    # –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if http_200_count == len(articles) and in_sitemap_count == len(articles):
        print("\n" + "="*120)
        print("üéâ –í–°–ï 50 –°–¢–ê–¢–ï–ô –û–ü–£–ë–õ–ò–ö–û–í–ê–ù–´, –î–û–°–¢–£–ü–ù–´ –ò –î–û–ë–ê–í–õ–ï–ù–´ –í SITEMAP!".center(120))
        print("="*120)

if __name__ == "__main__":
    main()

